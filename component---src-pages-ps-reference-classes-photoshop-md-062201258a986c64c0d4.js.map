{"version":3,"sources":["webpack://uxp-photoshop-documentation/./src/pages/ps_reference/classes/photoshop.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-ps-reference-classes-photoshop-md-062201258a986c64c0d4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"photoshop\"\n    }}>{`Photoshop`}</h1>\n    <p>{`The top level application object, root of the Photoshop DOM`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const app = require('photoshop').app\n`}</code></pre>\n    <p>{`From here you can access open documents, tools, UI elements and run commands or menu items.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Access`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`actionTree`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/actionset/\"\n            }}><em parentName=\"a\">{`ActionSet`}</em></a>{`[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Returns the action tree shown in Actions panel, as an array of ActionSets, each containing actions`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`activeDocument`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/document/\"\n            }}><em parentName=\"a\">{`Document`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-write`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The current active document`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`backgroundColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/solidcolor/\"\n            }}><em parentName=\"a\">{`SolidColor`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The default background color and color style for documents.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`currentTool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/objects/tool/\"\n            }}><em parentName=\"a\">{`Tool`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Current selected tool. For now, the Tool class is an object with only an `}{`\\``}{`id`}{`\\``}{` field. In the future, we aim to provide tools with their own classes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`displayDialogs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/modules/constants/#dialogmodes\"\n            }}><em parentName=\"a\">{`DialogModes`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-write`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The dialog mode for the application, which controls what types of dialogs should be displayed when your code is interacting with Photoshop.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`documents`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/documents/\"\n            }}><em parentName=\"a\">{`Documents`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A list of the documents currently open`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`fonts`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/textfonts/\"\n            }}><em parentName=\"a\">{`TextFonts`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The fonts installed on this system.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`foregroundColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/classes/solidcolor/\"\n            }}><em parentName=\"a\">{`SolidColor`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-write`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The default foreground color (used to paint, fill, and stroke selections)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`typename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`string`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Read-only`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The class name of the referenced Photoshop object`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"batchplay\"\n    }}>{`batchPlay`}</h3>\n    <p><em parentName=\"p\">{`Promise`}</em>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-photoshop/ps_reference/interfaces/actiondescriptor/\"\n      }}><em parentName=\"a\">{`ActionDescriptor`}</em></a>{`[]`}{`>`}</p>\n    <p>{`At the heart of all our APIs is batchPlay. It is the evolution of executeAction. It accepts\nActionDescriptors deserialized from JS objects, and can play multiple descriptors sequentially\nwithout updating the UI. This API is subject to change and may be accessible in other ways in the future.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`commands`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`any`}</em></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`options`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`any`}</em></td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"bringtofront\"\n    }}>{`bringToFront`}</h3>\n    <p><em parentName=\"p\">{`void`}</em></p>\n    <p>{`Brings application to focus, useful when your script ends, or requires an input`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"convertunits\"\n    }}>{`convertUnits`}</h3>\n    <p><em parentName=\"p\">{`number`}</em></p>\n    <p>{`Convert the given value from one unit to another. Available units are:\nConstants.Units.{CM, MM, INCHES, PIXELS, POINTS, PICAS}.\nUse `}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-photoshop/ps_reference/classes/document/#resolution\"\n      }}>{`Document.resolution`}</a>{` when converting from or to PIXELS.\nFor example, use this routine for converting a document's width from pixels to inches.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// convert the current document's width to inches\nconst exportDoc = psApp.activeDocument;\nlet widthInInches = psApp.convertUnits(exportDoc.width, \n                                       Constants.Units.PIXELS, \n                                       Constant.Units.INCHES, \n                                       exportDoc.resolution);\n\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`fromValue`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`number`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The value that is to be converted.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`fromUnits`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/modules/constants/#units\"\n            }}><em parentName=\"a\">{`Units`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The unit that the fromValue is in. Use `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/modules/constants/#units\"\n            }}>{`Constants.Units`}</a>{` for valid values.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`toUnits`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/modules/constants/#units\"\n            }}><em parentName=\"a\">{`Units`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The unit that the return value is in. Use `}<a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/modules/constants/#units\"\n            }}>{`Constants.Units`}</a>{` for valid values.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`resolution?`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`number`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The pixels per inch value to use when converting to and from pixel values.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createdocument\"\n    }}>{`createDocument`}</h3>\n    <p><strong parentName=\"p\">{`async`}</strong>{` : `}<em parentName=\"p\">{`Promise`}</em>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-photoshop/ps_reference/classes/document/\"\n      }}><em parentName=\"a\">{`Document`}</em></a>{`>`}</p>\n    <p>{`Create a new document.`}</p>\n    <p>{`No options will create a document of 7 x 5 inches at 300 pixels per inch.\nThis is the same as the \"Default Photoshop Size\" preset.`}</p>\n    <p>{`An object with a 'preset' string parameter can be used to specify any of\nthe other presets that come installed with Photoshop or created by users.`}</p>\n    <p>{`An object with one or more parameters can also be supplied. Any parameter\nmissing will be set to the default of: width 2100 pixels, height 1500 pixels,\nresolution 300 pixels per inch, mode: @RGBColorMode and a fill of white with\nno transparency.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// \"Default Photoshop Size\" 7x5 inches at 300ppi\nlet newDoc1 = await app.documents.add();\nlet newDoc2 = await app.documents.add({\n   width: 800, \n   height: 600, \n   resolution: 300, \n   mode: \"RGBColorMode\", \n   fill: \"transparent\"\n});\nlet newDoc3 = await app.documents.add({preset: \"My Default Size 1\"});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"parameters-2\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`options?`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/uxp-photoshop/ps_reference/objects/createoptions/documentcreateoptions/\"\n            }}><em parentName=\"a\">{`DocumentCreateOptions`}</em></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`@DocumentCreateOptions`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"open\"\n    }}>{`open`}</h3>\n    <p><strong parentName=\"p\">{`async`}</strong>{` : `}<em parentName=\"p\">{`Promise`}</em>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"/uxp-photoshop/ps_reference/classes/document/\"\n      }}><em parentName=\"a\">{`Document`}</em></a>{`>`}</p>\n    <p>{`Opens the specified document and returns the model`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`*Note that this API requires a `}<a parentName=\"p\" {...{\n          \"href\": \"../../../uxp/reference-js/Modules/uxp/Persistent%20File%20Storage/File/\"\n        }}>{`UXPFileEntry`}</a>{` object as its argument.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Open a file given entry\nlet entry = await require('uxp').storage.localFileSystem.getFileForOpening()\nconst document = await app.open(entry);\n\n// Show open file dialog\nconst document = await app.open();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"parameters-3\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`entry?`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`File`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"showalert\"\n    }}>{`showAlert`}</h3>\n    <p><em parentName=\"p\">{`Promise`}</em>{`<void`}{`>`}</p>\n    <p>{`Shows an alert in Photoshop with the given message`}</p>\n    <h4 {...{\n      \"id\": \"parameters-4\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`message`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><em parentName=\"td\">{`string`}</em></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}