{"version":3,"file":"component---src-pages-guides-devtool-plugin-management-md-ac7ffcdbd2235419d20e.js","mappings":"oOAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,qBAAmB,sBAE3B,4IACA,eACE,GAAM,yBAAuB,0BAE/B,kMACA,oBACE,eAAIC,WAAW,MAAI,WAAY,eAAIA,WAAW,MAAI,oBAA0B,MAC5E,eAAIA,WAAW,MAAI,sCACnB,eAAIA,WAAW,MAAI,gCAAiC,mBAAQA,WAAW,MAAI,eAAyB,YACpG,eAAIA,WAAW,MAAI,8BAA+B,mBAAQA,WAAW,MAAI,aAAuB,gLAAgL,cAAGA,WAAW,KAC1R,KAAQ,4FAA0F,iCAC5D,MAC1C,eAAIA,WAAW,MAAI,sCAAuC,mBAAQA,WAAW,MAAI,kBAA4B,YAC7G,eAAIA,WAAW,MAAI,aAAc,mBAAQA,WAAW,MAAI,oBAA8B,mBAAmB,mBAAQA,WAAW,MAAI,mBAA6B,MAC7J,eAAIA,WAAW,MAAI,UAAW,uBAAYA,WAAW,MAAI,UAAwB,mCAAmC,mBAAQA,WAAW,MAAI,4BAAsC,oMACjL,eAAIA,WAAW,MAAI,yCAA0C,mBAAQA,WAAW,MAAI,YAAsB,+KAC1G,eAAIA,WAAW,MAAI,UAAW,mBAAQA,WAAW,MAAI,iBAA2B,MAChF,eAAIA,WAAW,MAAI,2FAA4F,eAAIA,WAAW,MAAI,4BAAkC,0GAEtK,0GACA,eACE,GAAM,6BAA2B,8BAEnC,oJACA,oBACE,eAAIA,WAAW,MAAI,UAAW,mBAAQA,WAAW,MAAI,iBAA2B,sDAAsD,mBAAQA,WAAW,MAAI,0BAAoC,MACjM,eAAIA,WAAW,MAAI,mEAAoE,uBAAYA,WAAW,MAAI,iBAA+B,4BACjJ,eAAIA,WAAW,MAAI,4EAErB,eACE,GAAM,qBAAmB,sBAE3B,0NAA2M,mBAAQA,WAAW,KAAG,mBAA6B,mCAC9P,SAACV,EAAW,CAACW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,iFAAkE,mBAAQC,WAAW,KAAG,OAAiB,mFAG7G,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://uxp-photoshop-documentation/./src/pages/guides/devtool/plugin-management.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"plugin-management\"\n    }}>{`Plugin management`}</h1>\n    <p>{`The UXP Developer Tool allows you to create plugins from templates and add existing ones to your developer workspace.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-new-plugin\"\n    }}>{`Creating a new plugin`}</h2>\n    <p>{`You can, of course, create a plugin manually -- but using a template can be the fastest way to get started. To create a plugin from the Developer Tool, follow these steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Click *`}<em parentName=\"li\">{`Create Plugin...`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`A \"Create Plugin\" dialog appears.`}</li>\n      <li parentName=\"ul\">{`Supply a plugin name in the `}<strong parentName=\"li\">{`Plugin Name`}</strong>{` field.`}</li>\n      <li parentName=\"ul\">{`Supply a plugin ID in the `}<strong parentName=\"li\">{`Plugin Id`}</strong>{` field. During development you can use any identifier you want (as long as it's unique from any other plugin on your system), but for publication, you'll need one from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-distribution/creative-cloud/docs/guides/plugin_id/\"\n        }}>{`Developer Distribution portal`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Enter the plugin's version in the `}<strong parentName=\"li\">{`Plugin Version`}</strong>{` field.`}</li>\n      <li parentName=\"ul\">{`From the `}<strong parentName=\"li\">{`Host Application`}</strong>{` field, select `}<strong parentName=\"li\">{`Adobe Photoshop`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Enter `}<inlineCode parentName=\"li\">{`23.0.0`}</inlineCode>{` as the minimum version in the `}<strong parentName=\"li\">{`Host Application Version`}</strong>{` field. Earlier versions of Photoshop do not support plugins written with UXP. Of course, if your plugin needs features from a later version of Photoshop, you can enter a higher version here.`}</li>\n      <li parentName=\"ul\">{`Select one of the templates from the `}<strong parentName=\"li\">{`Template`}</strong>{` field. The \"ps-starter\" template will provide a simple plugin with no additional frameworks, whereas the \"ps-react-starter\" will provide a plugin that's based on React.`}</li>\n      <li parentName=\"ul\">{`Click `}<strong parentName=\"li\">{`Select Folder`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Select where you want the plugin to reside. Note that the plugin files will be created `}<em parentName=\"li\">{`in the folder you select`}</em>{`, so if you want the plugin to have its own folder, make sure to create a new folder in this dialog.`}</li>\n    </ul>\n    <p>{`Once the plugin files are created, the plugin will show up in the Tool's workspace.`}</p>\n    <h2 {...{\n      \"id\": \"adding-an-existing-plugin\"\n    }}>{`Adding an existing plugin`}</h2>\n    <p>{`You're not limited to creating new plugins from the Developer Tool â€“ you can add plugins that you've already started as well.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Click `}<strong parentName=\"li\">{`Add Plugin...`}</strong>{` (if you've not added any plugins, this will read `}<strong parentName=\"li\">{`Add Existing Plugin...`}</strong>{`)`}</li>\n      <li parentName=\"ul\">{`A file picker will appear. This picker expects you to pick the `}<inlineCode parentName=\"li\">{`manifest.json`}</inlineCode>{` in your plugin folder.`}</li>\n      <li parentName=\"ul\">{`Once you close the picker, the plugin will be added to your workspace.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"removing-a-plugin\"\n    }}>{`Removing a plugin`}</h2>\n    <p>{`If you're building a lot of plugins, you may find that the workspace may be getting cluttered. You can remove a plugin from the workspace by checking the plugin's associated checkbox and clicking `}<strong parentName=\"p\">{`Remove Selected`}</strong>{` (in the upper-right corner). `}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Removing a plugin from the Developer Tool's workspace does `}<strong parentName=\"p\">{`not`}</strong>{` remove the plugin from your storage. You can always add the plugin back later.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}