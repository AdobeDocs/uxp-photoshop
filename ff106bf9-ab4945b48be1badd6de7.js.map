{"version":3,"sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/Layout/index.js"],"names":["openAPISpec","OpenAPIBlock","SideNav","toggleSideNav","setShowSideNav","showSideNav","children","pageContext","location","pathname","decodeURIComponent","data","useStaticQuery","allMdx","allSitePage","site","allGithub","allGithubContributors","ParliamentSearchIndex","siteMetadata","pathPrefix","menu","versions","pages","subPages","docs","useState","isLoading","setIsLoading","pathWithRootFix","rootFix","pagesWithRootFix","rootFixPages","selectedPages","findSelectedPages","selectedSubPages","findSubPages","hasSideNav","length","loadable","frontMatter","frontmatter","hasGlobalHeaderTemp","GlobalHeaderTemp","hasLayout","layout","hasOpenAPISpec","load","then","layoutId","nextId","sideNavId","value","title","description","dir","className","color-scheme","css","id","LARGE_SCREEN_WIDTH","hidden","searchIndex","specUrl","onClick"],"mappings":"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","file":"ff106bf9-ab4945b48be1badd6de7.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { css } from '@emotion/react';\nimport loadable from '@loadable/component';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { rootFix, rootFixPages, findSelectedPages, findSubPages, LARGE_SCREEN_WIDTH } from '../../utils';\nimport '@spectrum-css/vars/dist/spectrum-global.css';\nimport '@spectrum-css/vars/dist/spectrum-medium.css';\nimport '@spectrum-css/vars/dist/spectrum-large.css';\nimport '@spectrum-css/vars/dist/spectrum-light.css';\nimport '@spectrum-css/vars/dist/spectrum-dark.css';\nimport '@spectrum-css/vars/dist/spectrum-lightest.css';\nimport '@spectrum-css/vars/dist/spectrum-darkest.css';\nimport '@spectrum-css/sidenav';\nimport '@adobe/focus-ring-polyfill';\nimport { Provider } from '../Context';\nimport { GlobalHeader } from '../GlobalHeader';\nimport { GlobalHeaderTemp } from '../GlobalHeader/temp';\nimport { SEO } from '../SEO';\nimport { ProgressCircle } from '../ProgressCircle';\nimport nextId from 'react-id-generator';\n\n// Cache spec\nlet openAPISpec;\n\nlet OpenAPIBlock;\nlet SideNav;\n\nconst toggleSideNav = (setShowSideNav) => {\n  setShowSideNav((showSideNav) => !showSideNav);\n};\n\nexport default ({ children, pageContext, location }) => {\n  location.pathname = decodeURIComponent(location.pathname);\n\n  // Load all data once and pass it to the Provider\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allGithub {\n          nodes {\n            repository\n            default_branch\n            root\n          }\n        }\n        allGithubContributors {\n          nodes {\n            contributors {\n              date\n              login\n              name\n            }\n            path\n          }\n        }\n        allMdx {\n          nodes {\n            tableOfContents\n            fileAbsolutePath\n          }\n        }\n        allSitePage {\n          nodes {\n            componentPath\n            path\n          }\n        }\n        site {\n          pathPrefix\n          siteMetadata {\n            menu\n            docs {\n              title\n              path\n            }\n            versions {\n              title\n              path\n            }\n            pages {\n              title\n              path\n            }\n            subPages {\n              title\n              path\n              header\n              pages {\n                title\n                path\n                pages {\n                  title\n                  path\n                  pages {\n                    title\n                    path\n                    pages {\n                      title\n                      path\n                      pages {\n                        title\n                        path\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        ParliamentSearchIndex\n      }\n    `\n  );\n\n  const { allMdx, allSitePage, site, allGithub, allGithubContributors, ParliamentSearchIndex } = data;\n  const { siteMetadata, pathPrefix } = site;\n  const { menu, versions, pages, subPages, docs } = siteMetadata;\n\n  const [showSideNav, setShowSideNav] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n  const selectedPages = findSelectedPages(pathWithRootFix, subPages);\n  const selectedSubPages = findSubPages(pathWithRootFix, pagesWithRootFix, subPages);\n  const hasSideNav = selectedSubPages.length > 0;\n\n  if (hasSideNav && !SideNav) {\n    SideNav = loadable(() => import('../SideNav'));\n  }\n\n  const frontMatter = pageContext?.frontmatter;\n  const hasGlobalHeaderTemp = frontMatter?.GlobalHeaderTemp;\n  const hasLayout = pageContext?.frontmatter?.layout !== 'none';\n\n  const hasOpenAPISpec = frontMatter?.openAPISpec;\n  if (typeof hasOpenAPISpec !== 'undefined') {\n    if (openAPISpec !== hasOpenAPISpec) {\n      openAPISpec = hasOpenAPISpec;\n    }\n  }\n\n  if (openAPISpec && !OpenAPIBlock) {\n    setIsLoading(true);\n    OpenAPIBlock = loadable(() => import('../OpenAPIBlock'));\n\n    OpenAPIBlock.load().then(() => {\n      setIsLoading(false);\n    });\n  }\n\n  const layoutId = nextId();\n  const sideNavId = nextId();\n\n  return (\n    <>\n      <Helmet>\n        <style>\n          {`\n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"), url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"), url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 400;\n          }\n          \n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\") format(\"woff2\"), url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\") format(\"woff\"), url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\") format(\"opentype\");\n            font-display: swap;\n            font-style: italic;\n            font-weight: 400;\n          }\n          \n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"), url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"), url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 700;\n          }\n          \n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\") format(\"woff2\"), url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\") format(\"woff\"), url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\") format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 300;\n          }\n          \n          @font-face {\n            font-family: \"adobe-clean-serif\";\n            src: url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\") format(\"woff2\"), url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\") format(\"woff\"), url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\") format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 900;\n          }\n          \n          html, body {\n            margin: 0;\n            text-size-adjust: none;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          \n          *[hidden] {\n            display: none !important;\n          }`}\n        </style>\n        <noscript>\n          {`\n          <style>\n            #${layoutId} {\n              grid-template-columns: 0 auto;\n            }\n            \n            #${sideNavId} {\n              display: none !important;\n            }\n            \n            .gatsby-resp-image-image {\n              opacity: 1 !important;\n            }\n          </style>\n          `}\n        </noscript>\n      </Helmet>\n      <Provider\n        value={{\n          location,\n          pageContext,\n          hasSideNav,\n          siteMetadata,\n          pathPrefix,\n          allSitePage,\n          allMdx,\n          allGithub,\n          allGithubContributors\n        }}>\n        <SEO title={frontMatter?.title} description={frontMatter?.description} />\n        <div\n          dir=\"ltr\"\n          className=\"spectrum spectrum--medium spectrum--large spectrum--light\"\n          color-scheme=\"light\"\n          css={css`\n            min-height: 100vh;\n            background-color: var(--spectrum-global-color-gray-50);\n          `}>\n          {hasLayout ? (\n            <>\n              <div\n                id={layoutId}\n                css={css`\n                  display: grid;\n                  grid-template-areas: 'header header' 'sidenav main';\n                  grid-template-rows: var(--spectrum-global-dimension-size-800);\n                  grid-template-columns: ${hasSideNav ? '256px auto' : '0 auto'};\n\n                  ${hasLayout &&\n                  `@media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                    grid-template-columns: 0px auto;\n                  }`}\n                `}>\n                <div\n                  css={css`\n                    grid-area: header;\n                    position: fixed;\n                    height: ${hasGlobalHeaderTemp\n                      ? 'var(--spectrum-global-dimension-size-1000)'\n                      : 'var(--spectrum-global-dimension-size-800)'};\n                    left: 0;\n                    right: 0;\n                    background-color: var(--spectrum-global-color-gray-50);\n                    z-index: 2;\n                  `}>\n                  {hasGlobalHeaderTemp ? (\n                    <GlobalHeaderTemp />\n                  ) : (\n                    <GlobalHeader\n                      menu={menu}\n                      versions={versions}\n                      pages={pages}\n                      docs={docs}\n                      location={location}\n                      hasSideNav={hasSideNav}\n                      toggleSideNav={() => {\n                        toggleSideNav(setShowSideNav);\n                      }}\n                    />\n                  )}\n                </div>\n                <div\n                  id={sideNavId}\n                  hidden={!hasSideNav}\n                  css={css`\n                    grid-area: sidenav;\n                    position: fixed;\n                    z-index: 1;\n                    width: 256px;\n                    height: 100%;\n                    background-color: var(--spectrum-global-color-gray-75);\n\n                    ${hasLayout &&\n                    `@media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                      transition: transform var(--spectrum-global-animation-duration-200) ease-in-out;\n                      transform: translateX(${showSideNav ? '0' : '-100%'});\n                    }`}\n                  `}>\n                  {SideNav && (\n                    <SideNav\n                      selectedPages={selectedPages}\n                      selectedSubPages={selectedSubPages}\n                      searchIndex={ParliamentSearchIndex}\n                    />\n                  )}\n                </div>\n                <div\n                  css={css`\n                    grid-area: main;\n                  `}>\n                  <div hidden={!hasOpenAPISpec}>\n                    {openAPISpec && (\n                      <main\n                        css={css`\n                          [role='navigation'] [role='menuitem'] + ul {\n                            display: block;\n                          }\n                        `}>\n                        {OpenAPIBlock && <OpenAPIBlock specUrl={openAPISpec} />}\n                      </main>\n                    )}\n                  </div>\n                  {!hasOpenAPISpec && children}\n                </div>\n              </div>\n\n              <div\n                css={css`\n                  position: fixed;\n                  top: 0;\n                  left: 0;\n                  right: 0;\n                  bottom: 0;\n                  display: ${isLoading ? 'grid' : 'none'};\n                  place-items: center center;\n                `}>\n                <ProgressCircle />\n              </div>\n\n              <div\n                css={css`\n                  display: none;\n\n                  @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                    display: block;\n                    transition: opacity 160ms ease-in;\n                    background-color: rgba(0, 0, 0, 0.4);\n                    pointer-events: none;\n                    opacity: 0;\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    height: 100%;\n                    width: 100%;\n\n                    ${showSideNav &&\n                    `\n                    pointer-events: auto;\n                    opacity: 1;\n                  `}\n                  }\n                `}\n                onClick={() => {\n                  toggleSideNav(setShowSideNav);\n                }}\n              />\n            </>\n          ) : (\n            children\n          )}\n        </div>\n      </Provider>\n    </>\n  );\n};\n"],"sourceRoot":""}