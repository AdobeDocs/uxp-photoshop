{"version":3,"file":"component---src-pages-scripting-samples-index-md-34904dd97a7879435b31.js","mappings":"2SAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,WAAS,YAEjB,eACE,GAAM,sBAAoB,uBAE5B,iHACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,eAAa,oKAM9B,eACE,GAAM,+BAA6B,gCAErC,6HACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,gTAY9B,eACE,GAAM,uBAAqB,wBAE7B,2GACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,0QAU9B,eACE,GAAM,0BAAwB,4BAEhC,2DAA4C,uBAAYA,WAAW,KAAG,uBAAqC,WAC3G,oBACE,eAAIA,WAAW,MAAI,0BAA2B,uBAAYA,WAAW,MAAI,gBAA8B,MACvG,eAAIA,WAAW,MAAI,iCAAkC,uBAAYA,WAAW,MAAI,cAA4B,OAE9G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,6UAe9B,eACE,GAAM,qBAAmB,sBAE3B,eACE,GAAM,kBAAgB,mBAExB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,8lBAmB9B,eACE,GAAM,4BAA0B,+BAElC,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,o0DAwD9B,eACE,GAAM,0BAAwB,2BAEhC,+EAAgE,uBAAYA,WAAW,KAAG,iBAA+B,2JACzH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,+/BAiC9B,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WACb,YAED,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACd,oBAASA,WAAW,QAAM,gBAClB,mBAAQA,WAAW,UACnB,OAAU,CAAC,+EAAgF,+EAAgF,iFAC3K,MAAS,oCACT,KAAQ,eACE,gBACV,mBAAQA,WAAW,UACnB,OAAU,CAAC,8EAA+E,8EAA+E,gFACzK,MAAS,oCACT,KAAQ,cACE,gBACV,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,yEACP,IAAO,gBACP,MAAS,gBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,WAIpB,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://uxp-photoshop-documentation/./src/pages/scripting/samples/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"samples\"\n    }}>{`Samples`}</h1>\n    <h2 {...{\n      \"id\": \"create-a-new-layer\"\n    }}>{`Create a new layer`}</h2>\n    <p>{`You can create a script that creates a new layer, with the help of the Photoshop DOM API: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const app = require('photoshop').app;\nawait app.documents.add();\nawait app.activeDocument.createLayer();\napp.activeDocument.layers[0].name = 'New layer';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"access-the-local-filesystem\"\n    }}>{`Access the local filesystem`}</h2>\n    <p>{`You can create a script that accesses your local filesystem, with the help of the UXP storage module: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const uxpfs = require(\"uxp\").storage;\nconst ufs = uxpfs.localFileSystem;\n\ntry {\n    const folder = await ufs.getTemporaryFolder()\n    const metadata = await folder.getMetadata();\n    console.log(JSON.stringify(metadata));\n} catch (e) {\n    console.log(\\`Local File system error: \\${e}\\`);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-a-file-picker\"\n    }}>{`Using a file picker`}</h2>\n    <p>{`You can create a script that instantiates a file picker for writing/saving to files.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const fs = require('uxp').storage.localFileSystem;\ntry {\n    // save file to a location using file picker\n    const file = await fs.getFileForSaving(\"demo.txt\");\n    await file.write(\"Hello World! This is demo.\");\n} catch (e) {\n    console.log(e);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"readwrite-to-clipboard\"\n    }}>{`Read/write to clipboard`}</h2>\n    <p>{`You can access the clipboard module (`}<inlineCode parentName=\"p\">{`navigator.clipboard`}</inlineCode>{`) to: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`write to a clipboard (`}<inlineCode parentName=\"li\">{`setContent()`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`read a clipboard's contents (`}<inlineCode parentName=\"li\">{`readText()`}</inlineCode>{`)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`try {\n    const clipboard = navigator.clipboard;\n    await clipboard.setContent({ 'text/plain': \"Test string\" });\n} catch (e) {\n    throw new Error(e);\n}\ntry {\n    const clipboard = navigator.clipboard;\n    const text = await clipboard.readText();\n    console.log(text);\n}  catch (e) {\n    throw new Error(e);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-dialog-uis\"\n    }}>{`Create dialog UIs`}</h2>\n    <h3 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function createDialog() {\n    const dialog = document.createElement(\"dialog\");\n    dialog.style.color = \"white\";\n    const div = document.createElement(\"div\");\n    div.style.display = \"block\";\n    div.style.height = \"200px\";\n    div.style.width = \"400px\";\n    const header = document.createElement(\"h2\");\n    header.id = \"head\";\n    header.style.color = \"white\";\n    header.textContent = \"Sample Dialog\";\n    div.appendChild(header);\n    dialog.appendChild(div);\n    await document.body.appendChild(dialog).showModal();\n}\n// Wait for the dialog to render\nawait createDialog();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-with-done-button\"\n    }}>{`Example with \"Done\" button`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function showDialog() {\n    let dialog = createDialog();\n    document.body.appendChild(dialog).showModal();\n\n    // Give the script time to show the dialog by returning a promise. Make sure that it is resolved/rejected later.\n    return new Promise((resolve, reject) => {\n        try {\n            // Resolve the promise and dismiss the dialog when when user clicks on 'Done' button\n            const doneBtn = document.getElementById(\"done\");\n            doneBtn.addEventListener(\"click\", () => {\n                console.log(\"user is done\");\n                dialog.close();\n                resolve(\"user is done\");\n            })\n\n            // reject when dialog is cancelled/closed\n            dialog.addEventListener(\"cancel\", () => {\n                console.log(\"dialog cancelled\");\n                reject(\"dialog cancelled\");\n            });\n\n            dialog.addEventListener(\"close\", () => {\n                console.log(\"dialog closed\");\n                reject(\"dialog closed\");\n            });\n        } catch (e) {\n            console.log(e);\n            reject(e);\n        }\n    })\n}\n\nfunction createDialog() {\n    const dialog = document.createElement(\"dialog\");\n    dialog.style.color = \"white\";\n    const div = document.createElement(\"div\");\n    div.style.display = \"block\";\n    div.style.height = \"200px\";\n    div.style.width = \"400px\";\n    const header = document.createElement(\"h2\");\n    header.id = \"head\";\n    header.style.color = \"white\";\n    header.textContent = \"Sample Dialog\";\n    div.appendChild(header);\n    const doneButton = document.createElement(\"button\");\n    doneButton.id = \"done\";\n    doneButton.textContent = \"Done\";\n    div.appendChild(doneButton);\n    dialog.appendChild(div);\n    return dialog;\n}\n\n// Wait for the dialog to render\nawait showDialog();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"access-installed-fonts\"\n    }}>{`Access installed fonts`}</h2>\n    <p>{`Photoshop has set the permission for the Fonts module to `}<inlineCode parentName=\"p\">{`ReadInstalled`}</inlineCode>{`. This means that if no font is specified or if the font is not installed, then UXP will fallback to \"system-ui\" font (the default OS system UI font).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function createDialog() {\n    const dialog = document.createElement(\"dialog\");\n\n    dialog.style.color = \"white\";\n\n    const div = document.createElement(\"div\");\n    div.style.display = \"block\";\n    div.style.height = \"200px\";\n    div.style.width = \"450px\";\n\n    const p1 = createParagraph(\"system-ui\"); // use default OS font\n    const p2 = createParagraph(\"non-existent-font\"); // try using a non existent font. Will resolve to OS default.\n    const p3 = createParagraph(\"Courier New\"); // use any installed font\n    div.appendChild(p1);\n    div.appendChild(p2);\n    div.appendChild(p3);\n\n    dialog.appendChild(div);\n    await document.body.appendChild(dialog).showModal();\n}\n\nfunction createParagraph(fontFamily) {\n    const p = document.createElement(\"p\");\n    p.style.color = \"white\";\n    p.style.fontFamily = fontFamily;\n    p.textContent = \\`font-family:\\${fontFamily}: A fox jumps over the lazy dog\\`;\n    return p;\n}\n\n// Wait for the dialog to render\nawait createDialog();\n`}</code></pre>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1034px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"57.8125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/5530d/fonts.webp 320w\", \"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/0c8fb/fonts.webp 640w\", \"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/e4622/fonts.webp 1034w\"],\n            \"sizes\": \"(max-width: 1034px) 100vw, 1034px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/dd4a7/fonts.png 320w\", \"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/0f09e/fonts.png 640w\", \"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/b69f7/fonts.png 1034w\"],\n            \"sizes\": \"(max-width: 1034px) 100vw, 1034px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/uxp-photoshop/static/6e7995d04a092809fd7b8fb8691cf294/b69f7/fonts.png\",\n            \"alt\": \"Fonts example\",\n            \"title\": \"Fonts example\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}