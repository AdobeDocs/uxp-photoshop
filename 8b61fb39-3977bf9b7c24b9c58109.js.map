{"version":3,"file":"8b61fb39-3977bf9b7c24b9c58109.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/TextBlock/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { HeroButtons } from \"../Hero\";\nimport { Media } from \"../Media\";\nimport PropTypes from \"prop-types\";\nimport {\n  layoutColumns,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH\n} from \"../../utils\";\nimport classNames from \"classnames\";\nimport \"@spectrum-css/typography\";\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0,\n};\n\nconst MIN_TABLET_SCREEN_WIDTH = '1023px'\nconst alignMapping = [\"margin-left: 0;\", \"margin-right: 0;\"];\n\nconst mediaCSS = css`\n  & {\n    display: inline;\n    width: ${layoutColumns(6)};\n    box-sizing: border-box;\n    padding: var(--spectrum-global-dimension-size-200);\n\n    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n\n          & li {\n            display: flex;\n            border-right: 1px solid var(--spectrum-global-color-gray-300);\n            height: var(--spectrum-global-dimension-size-600);\n            margin-right: var(--spectrum-global-dimension-size-150);\n          }\n\n          & li:last-of-type {\n            padding-right: 0;\n            border-right: none;\n          }\n\n          .gatsby-resp-image-wrapper {\n            position: relative;\n            width: var(--spectrum-global-dimension-size-800) !important;\n          }\n\n          .gatsby-resp-image-image {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            object-fit: contain;\n          }\n        `,\n      })\n    : null;\n\nconst Texts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith(\"text\"));\n  return textKeys.map((textKey) => texts[textKey]);\n};\n\nconst Links = ({ links, isCentered, isLinksGroups=false }) =>\n  links\n    ? cloneElement(links, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n          ${!isLinksGroups? \"\" : \"flex-wrap: wrap;\"}\n          margin-top: ${isCentered || isLinksGroups\n            ? \"var(--spectrum-global-dimension-size-200) !important;\"\n            : \"var(--spectrum-global-dimension-size-600) !important;\"};\n          & li {\n            display: flex;\n            align-items: center;\n            ${isLinksGroups \n              ? `border-radius: 10px; \n                border:solid 1.8px;\n                margin-right: var(--spectrum-global-dimension-size-200);\n                height: var(--spectrum-global-dimension-size-300);\n                margin-top: var(--spectrum-global-dimension-size-100);\n                background-color: #F7F7F7;\n                `\n              : \"height: var(--spectrum-global-dimension-size-400)\"};\n          }\n\n          & li a {\n            white-space: nowrap;           \n            ${isLinksGroups \n              ? `margin: var(--spectrum-global-dimension-size-100); \n              color: currentColor;\n              text-decoration: none;\n              font-size: var(--spectrum-global-dimension-size-175);` \n              : \"margin-right: var(--spectrum-global-dimension-size-600);\"};\n          }\n\n          & li:last-of-type a {\n            margin-right: ${isLinksGroups ? \"var(--spectrum-global-dimension-size-100)\": \"0\"}\n          }\n\n          & li:hover{\n            ${isLinksGroups  ?\n            `background-color: var(--spectrum-button-primary-m-background-color-hover, var(--spectrum-global-color-gray-800));\n            border-color: var(--spectrum-button-primary-m-border-color-hover, var(--spectrum-global-color-gray-800));            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));`\n            : \"\"}\n          }        \n          & li:hover a{\n            ${isLinksGroups  ? `\n            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));\n            text-decoration: none;`\n            : \"\"}\n          }\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-wrapper {\n            width: var(--spectrum-global-dimension-size-400) !important;\n            margin-left: 0 !important;\n            margin-right: var(--spectrum-global-dimension-size-150) !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: contain;\n          }\n          \n          @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n            flex-direction: ${isLinksGroups ? \"initial\" : \"column\"};\n            align-items: ${isCentered ? \"center\" : \"left\"};          \n\n            li {\n              margin-top: var(--spectrum-global-dimension-size-100);              \n            }\n\n            li a {\n              ${isLinksGroups  \n                ? \"font-size: var(--spectrum-global-dimension-size-130);` \" \n                : `margin-right: 0;`\n              }\n            }\n          }\n\n          @media screen and (max-width: 767px) {\n            ${isLinksGroups  ? `width: min-content` : \"\" }\n          }\n        `,\n      })\n    : null;\n\nconst TextBlock = ({\n  className,\n  heading,\n  subHeading,\n  links,\n  buttons,\n  linksGroups,\n  icons,\n  image,\n  assetImg,\n  video,\n  theme = \"lightest\",\n  width = \"100%\",\n  isCentered = false,\n  primaryOutline = false,\n  headerElementType = \"h3\",\n  imageOnly = false,\n  imgWidth = \"50%\",\n  isPrimaryBtn=false,\n  variantsTypePrimary='accent',\n  variantsTypeSecondary='secondary',\n  variantStyleFill = \"fill\",\n  variantStyleOutline = \"outline\",\n  hasCodeBlock = false,\n  homeZigZag = false,\n  isbuttonGroups = false,\n  ...props\n}) => {\n  const Element = headerElementType;\n\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === \"33%\") {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== \"undefined\") {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n  if (width !== \"100%\") {\n    isCentered = true;\n  }\n\n  if (isCentered) {\n    let blockWidth = \"\";\n    let extraMargin = \"\";\n\n    if (typeof counter[columns] !== \"undefined\") {\n      counter[columns]++;\n    }\n\n    if (columns === 1) {\n      blockWidth = `max-width: ${layoutColumns(6)};`;\n    } else if (columns > 3) {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-3600);\";\n    } else {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-4600);\";\n      extraMargin = alignMapping[counter[columns] % columns];\n    }\n    return (\n      <>\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            display: table-cell;\n            width: ${width.replace(\"%\", \"vw\")};\n            background: var(--spectrum-global-color-gray-100);\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              display: block;\n              width: 100%;\n            }\n          `}\n        >\n          <div\n            css={css`\n              ${blockWidth}\n              padding: 0 var(--spectrum-global-dimension-size-400);\n              margin: auto;\n              ${extraMargin}\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                max-width: none;\n                margin: auto;\n              }\n            `}\n          >\n            <Icons icons={icons} isCentered={isCentered} />\n\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  height: var(--spectrum-global-dimension-size-1000);\n                  margin-top: 0;\n                  margin-bottom: var(--spectrum-global-dimension-size-300);\n\n                  .gatsby-resp-image-wrapper {\n                    position: relative;\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `,\n              })}\n            {assetImg &&\n                <div className={assetImg?.props?.children}/>}\n\n            {heading && (\n              <Element\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {heading.props.children}\n              </Element>\n            )}\n            {subHeading && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n            <Texts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              styles={[variantStyleFill, variantStyleOutline]}\n              variants={[variantsTypePrimary,variantsTypeSecondary]}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-150);\n                margin-bottom: var(--spectrum-global-dimension-size-150);\n                justify-content: center;\n              `}\n            />\n\n            <Links links={links} isCentered={isCentered} />\n\n            <Media css={mediaCSS} video={video} />\n          </div>\n        </section>\n        {width === \"100%\" ||\n        (typeof counter[columns] !== \"undefined\" &&\n          counter[columns] % columns === 0) ? (\n          <div aria-hidden=\"true\" />\n        ) : null}\n      </>\n    );\n  } else {\n    const isReversed =\n      props.slots.endsWith(\"image\") || props.slots.endsWith(\"video\");\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          width: 100%;\n          background: var(--spectrum-global-color-gray-100);\n        `}\n      >\n        <div\n          css={css`\n            width: ${DESKTOP_SCREEN_WIDTH};\n            box-sizing: border-box;\n            margin: auto;\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              width: 100%;\n\n              // & > div {\n              //   flex-direction: column !important;\n              // }\n            }\n          `}\n        >\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: ${imageOnly\n                ? \"column\"\n                : isReversed\n                ? \"row-reverse\"\n                : \"row\"};\n\n              @media screen and (max-width: ${MIN_TABLET_SCREEN_WIDTH}) {\n                flex-direction: column;\n              }\n            `}\n          >\n            {image &&\n              cloneElement(image, {\n                css: css`\n                  display: flex;\n                  align-items: center;\n                  justify-content: center;\n                  width: ${imgWidth};\n                  // we need to modify the height\n                  // height: calc(\n                  //   var(--spectrum-global-dimension-size-4600) -\n                  //     var(--spectrum-global-dimension-size-225)\n                  // );\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n                  margin-top: 0;\n\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    object-fit: contain;\n                  }\n\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    height: auto;\n                    width: 100%;\n                  }\n                `,\n              })}\n             {assetImg &&\n                <div className={assetImg?.props?.children}/>}\n\n            <Media css={mediaCSS} video={video} />\n            {!imageOnly && <div\n              css={css`\n                ${hasCodeBlock ?`width: 70%;` : `width: 50%;`}\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                text-align: left;\n                box-sizing: border-box;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: var(--spectrum-global-dimension-size-400) 0;\n                }\n              `}\n            >\n              <Icons icons={icons} isCentered={isCentered} />\n\n              {heading && (\n                <Element\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                    margin-top: 0 !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n\n                    & + p {\n                      margin-top: 0 !important;\n                    }\n                  `}\n                >\n                  {heading.props.children}\n                </Element>\n              )}\n              {subHeading && !linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                font-size: var(\n                  --spectrum-global-dimension-size-225\n                ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n              <Texts texts={props} />\n\n              {subHeading && linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;                  \n                  margin-top: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n              {linksGroups && (\n                <Links links={linksGroups} isCentered={isCentered} isLinksGroups />\n              )}\n\n              <HeroButtons\n                buttons={buttons}\n                styles={[variantStyleFill, variantStyleOutline]}\n                variants={[variantsTypePrimary,variantsTypeSecondary]}\n                heading={homeZigZag ? heading?.props?.children : ''}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n\n              <Links links={links} isCentered={isCentered} />\n            </div> }\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nTextBlock.propTypes = {\n  heading: PropTypes.element,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  linksGroups: PropTypes.element,\n  image: PropTypes.element,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf([\"100%\", \"50%\", \"33%\", \"25%\"]),\n  isCentered: PropTypes.bool,\n  headerElementType: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n  imageOnly: PropTypes.bool,\n  primaryOutline: PropTypes.bool,\n  hasCodeBlock: PropTypes.bool,\n  imgWidth: PropTypes.string,\n  homeZigZag: PropTypes.bool,\n  isbuttonGroups: PropTypes.bool,\n};\n\nexport { TextBlock };\n"],"names":["counter","alignMapping","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","_ref10","icons","isCentered","cloneElement","Texts","_ref11","texts","Object","keys","filter","key","startsWith","map","textKey","Links","_ref12","links","isLinksGroups","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","TextBlock","_ref13","className","heading","subHeading","buttons","linksGroups","image","assetImg","video","theme","width","primaryOutline","headerElementType","imageOnly","imgWidth","isPrimaryBtn","variantsTypePrimary","variantsTypeSecondary","variantStyleFill","variantStyleOutline","hasCodeBlock","homeZigZag","isbuttonGroups","props","_objectWithoutProperties","_excluded","Element","initColumns","parseFloat","toFixed","columns","useState","useEffect","_assetImg$props","blockWidth","extraMargin","___EmotionJSX","React","classNames","replace","children","HeroButtons","variants","Media","_assetImg$props2","_heading$props","isReversed","slots","endsWith","DESKTOP_SCREEN_WIDTH"],"sourceRoot":""}