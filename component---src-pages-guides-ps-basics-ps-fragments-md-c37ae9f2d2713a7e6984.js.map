{"version":3,"sources":["webpack:///./src/pages/guides/ps_basics/ps-fragments.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,yBADR,yBAGA,mBAAQ,CACN,GAAM,gBADR,gBAGA,mBAAQ,CACN,GAAM,iBADR,iBAGA,yBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,4IAOL,mBAAQ,CACN,GAAM,wBADR,wBAGA,mBAAQ,CACN,GAAM,yCADR,0CAGA,gCACE,mBAAGA,WAAW,cAAd,+MAEF,mBAAQ,CACN,GAAM,kBADR,kBAGA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8mBAsBTJ,EAAWK,gBAAiB","file":"component---src-pages-guides-ps-basics-ps-fragments-md-c37ae9f2d2713a7e6984.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useful-code-fragments\"\n    }}>{`Useful Code Fragments`}</h1>\n    <h2 {...{\n      \"id\": \"ui-fragments\"\n    }}>{`UI Fragments`}</h2>\n    <h3 {...{\n      \"id\": \"show-an-alert\"\n    }}>{`Show an alert`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function showAlert(alertMessage) {\n    const psCore = require('photoshop').core;\n    psCore.showAlert({ message: alertMessage});\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"filesystem-fragments\"\n    }}>{`Filesystem Fragments`}</h2>\n    <h3 {...{\n      \"id\": \"saving-to-your-plugins-data-directory\"\n    }}>{`Saving to Your Plugin's Data Directory`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: the plugin directory itself is read-only. If you need to store data that persists through a plugin version update, use this directory, or ask the user for permission to save in a chosen directory.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"secure-storage\"\n    }}>{`Secure Storage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function saveSecure(key, value) {\n  const result = await require('uxp').storage.secureStorage.setItem(key, value);\n}\n\nasync function loadSecure(key) {\n  const result = await require('uxp').storage.secureStorage.getItem(ssKey);\n  // note that result is a byte array, which probably needs to be turned into a string. See this article for more info:\n  // https://weblog.rogueamoeba.com/2017/02/27/javascript-correctly-converting-a-byte-array-to-a-utf-8-string/\n  return result\n}\n\nasync function countSecure() {\n  const result = await require('uxp').storage.secureStorage.length;\n  return result;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}