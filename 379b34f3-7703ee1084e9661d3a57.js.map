{"version":3,"file":"379b34f3-7703ee1084e9661d3a57.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, _highlightResult }) => {\n    let urlPath = ''\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS]?.[keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS]?.[keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, indexAll, indexPrefix, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (isIFramed) {\n\n      window.addEventListener(\"message\", (e) => {\n        const message = JSON.parse(e.data);\n        if (message.localPathName) {\n          let localPathName = message.localPathName;\n          if (localPathName !== \"/\") {\n            // make sure path name has a slash at start/end to match path-prefix format \n            if (!localPathName.startsWith('/')) { localPathName = `/${localPathName}` }\n            if (!localPathName.endsWith('/')) { localPathName = `${localPathName}/` }\n            const localProduct = indexAll.find(product => product.productIndices.some(idx => {\n              return localPathName.startsWith(idx.indexPathPrefix);\n            }));\n\n            if (localProduct?.productName) {\n              setSearchIndex([localProduct.productName, ...searchIndex]);\n            }\n          }\n\n          const reply = JSON.stringify({ received: message.localPathName });\n          parent.postMessage(reply, \"*\");\n        }\n      });\n    };\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => {\n      return indexPrefix ? `${indexPrefix}-${indexName}` : indexName\n    });\n\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        const searchClose = document.getElementById(\"aio-Search-close\");\n        searchClose ? searchClose.focus() : \"\";\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n      if (searchQuery.length && !searchResults.length) {\n        setShowClear(true);\n\n        const suggestions = await searchSuggestions(algolia, searchQuery, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices);\n        setSearchQueryCounter(searchQueryCounter + 1);\n        console.log('Total search queries counted is:', searchQueryCounter);\n\n        if (suggestions?.results?.length) {\n          const results = [];\n          suggestions.results.forEach(({ hits }) => {\n            mapSearchResults(hits, results);\n          });\n          setSearchSuggestionResults(results);\n\n          if (!searchResults.length) {\n            setShowSearchResults(false);\n          }\n        } else {\n          setSearchSuggestionResults([]);\n        }\n\n        setIsSuggestionsOpen(true);\n      } else {\n        setShowClear(false);\n        setIsSuggestionsOpen(false);\n      }\n    }\n\n    return () => clearTimeout(timeOutId);\n\n  }, [searchQuery])\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          const allLinks = suggestionsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          const allLinks = searchResultsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n    }, [searchSuggestionResults, searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                  &:focus{\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n                    return optn[1].matchedWords.length > 0\n                  });\n                  let content = \"\";\n                  if (descriptions.length > 1) {\n                    descriptions.sort((a, b) => {\n                      return a[1].value.length > b[1].value.length ? -1 : 1;\n                    });\n                    content = descriptions[0]?.[1]?.value?.length > descriptions[1]?.[1]?.value?.length ? descriptions[0]?.[1]?.value : descriptions[1]?.[1]?.value;\n                  } else {\n                    content = descriptions[0]?.[1]?.value ? descriptions[0]?.[1]?.value : \"\";\n                  }\n\n                  content = content.substring(0, 250);\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(optn => optn[1].matchedWords.length > 0);\n                    let content = \"\";\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content = descriptions[0]?.[1]?.value?.length > descriptions[1]?.[1]?.value?.length ? descriptions[0]?.[1]?.value : descriptions[1]?.[1]?.value;\n                    } else {\n                      content = descriptions[0]?.[1]?.value ? descriptions[0]?.[1]?.value : \"\";\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchIndexes","async","algolia","query","indexPrefix","selectedIndex","indexAll","existingIndices","setExistingIndices","keywords","indexes","length","algoliaIndices","listIndices","algoliaIndexNames","Object","values","items","map","_ref21","filteredIndexes","prod","productIndices","flat","_ref22","indexName","filter","localIndex","includes","selected","queries","forEach","push","facets","attributesToRetrieve","hitsPerPage","Math","ceil","filters","keyword","join","multipleQueries","mapSearchResults","hits","results","_ref23","objectID","url","path","_highlightResult","urlPath","isExternalLink","find","result","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","Search","_ref24","showSearch","setShowSearch","searchButtonId","isIFramed","isLoading","setIsLoading","useState","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","searchIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","_search","_search$results","SEARCH_PARAMS","index","message","JSON","stringify","targetOrigin","setTargetOrigin","parentURL","document","referrer","indexOf","parent","postMessage","localProduct","product","mappedProductResults","mappedSearchResults","mappedKeywordResults","_ref25","undefined","splice","mapKeywordResults","keys","found","_facets$SEARCH_KEYWOR","_facets$SEARCH_KEYWOR2","getIndexesFromProduct","useEffect","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","productName","concat","_toConsumableArray","reply","received","_ref26","_ref27","searchParams","URL","get","split","current","focus","scrollTop","onClick","_ref28","target","contains","id","removeEventListener","onEscape","_ref29","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","_suggestions$results","suggestions","_ref19","_ref20","searchProductNames","localProductIndexes","searchSuggestions","console","log","_ref30","clearTimeout","allLinks","querySelectorAll","link","___EmotionJSX","React","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","_ref31","querySelector","onChange","type","placeholder","autoComplete","ActionButton","tabIndex","isQuiet","Close","Popover","isOpen","Menu","_ref32","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","_searchSuggestion$_hi","to","origin","title","descriptions","entries","optn","matchedWords","content","_descriptions$","_descriptions$$","_descriptions$$$value","_descriptions$2","_descriptions$2$","_descriptions$2$$valu","_descriptions$3","_descriptions$3$","_descriptions$4","_descriptions$4$","_descriptions$5","_descriptions$5$","_descriptions$6","_descriptions$6$","sort","a","b","substring","MenuItem","href","dangerouslySetInnerHTML","__html","ProgressCircle","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","Checkbox","isSelected","checked","keywordResult","selectedKeyword","searchResult","_searchResult$_highli","_descriptions$7","_descriptions$7$","_descriptions$7$$valu","_descriptions$8","_descriptions$8$","_descriptions$8$$valu","_descriptions$9","_descriptions$9$","_descriptions$10","_descriptions$10$","_descriptions$11","_descriptions$11$","_descriptions$12","_descriptions$12$","AnchorLink","variant","xmlns","viewBox","d"],"sourceRoot":""}