{"version":3,"file":"f5cc1685-2c9da14c6390b931df25.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/ProductCardGrid/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from '../AnchorButton';\nimport { Checkbox } from '../Checkbox';\nimport { Picker } from '../Picker';\nimport { Image } from \"../Image\";\nimport classNames from \"classnames\";\nimport { MOBILE_SCREEN_WIDTH,TABLET_SCREEN_WIDTH,layoutColumns} from '../../utils';\n\nimport {  DESKTOP_SCREEN_WIDTH } from \"../../utils\";\n\nimport PropTypes from \"prop-types\";\nimport \"@spectrum-css/typography\";\nimport \"@spectrum-css/card\";\nimport _orderBy from 'lodash/orderBy'\n\nconst filterByClouds = (\n  products,\n  cloudFilter,\n  additionalFilter,\n  setFilteredProducts\n) => {\n  const filteredProducts = products.filter(({ cloud })=>\n    cloudFilter.some((selectedCloud) => cloud === selectedCloud)\n  );\n  // const selectedFilter = additionalFilters.find(\n  //   ({ value }) => value === additionalFilter\n  // );\n\n const orderByProducts = _orderBy(filteredProducts, ['id'],['asc']);\n\n  setFilteredProducts(orderByProducts\n    // selectedFilter.filter(filteredProducts, selectedFilter.ids)\n  );\n};\n\nconst filterByName = (products) =>\n  products.sort(({ name: nameA }, { name: nameB }) =>\n    nameA.localeCompare(nameB)\n  );\n\nconst filterByLastUpdated = (products) =>\n  products.sort(\n    ({ lastUpdated: lastUpdatedA }, { lastUpdated: lastUpdatedB }) => {\n      if (new Date(lastUpdatedB) > new Date(lastUpdatedA)) {\n        return 1;\n      } else if (new Date(lastUpdatedB) < new Date(lastUpdatedA)) {\n        return -1;\n      }\n      return 0;\n    }\n  );\n\nconst filterById = (products, ids = []) => {\n  const filteredProducts = [];\n  ids.forEach((productId) => {\n    const product = products.find(({ id }) => id === productId);\n    if (product) {\n      filteredProducts.push(product);\n    }\n  });\n  return filteredProducts;\n};\n\nconst additionalFilters = [\n  {\n    title: \"Last updated\",\n    value: \"last_updated\",\n    filter: filterByLastUpdated,\n  },\n  {\n    title: \"Name\",\n    value: \"name\",\n    filter: filterByName,\n  },\n  {\n    title: \"Custom\",\n    value: \"id\",\n    filter: filterById,\n  },\n];\n\nconst ProductCardGrid = ({\n  clouds = [],\n  products = [],\n  interaction = false,\n  orderBy = \"last_updated\",\n  filterByCloud = [],\n  filterByIds = [],\n  buttonName = \"Learn more\",\n  showName = true,\n  showDescription = true,\n  showBorder = true,\n  imgHeight = \"1000\",\n  isCentered = false,\n  className,\n  containerWidth=DESKTOP_SCREEN_WIDTH,\n  theme=\"light\",\n  enablePicker=false\n}) => {\n  if (filterByIds.length) {\n    orderBy = \"id\";\n  }\n\n  const defaultFilter = additionalFilters.find(\n    ({ value }) => value === orderBy\n  );\n  defaultFilter.ids = filterByIds;\n\n  const [additionalFilter, setAdditionalFilter] = useState(defaultFilter.value);\n  const [filteredProducts, setFilteredProducts] = useState(\n    defaultFilter.filter(products, defaultFilter.ids)\n  );\n  const [cloudFilter, setCloudFilter] = useState(filterByCloud);\n\n  useEffect(() => {\n    filterByClouds(\n      products,\n      cloudFilter.length ? cloudFilter : clouds,\n      additionalFilter,\n      setFilteredProducts\n    );\n  }, [cloudFilter, additionalFilter, products, clouds]);\n\n  const height =\n    \"calc(var(--spectrum-global-dimension-size-5000) - var(--spectrum-global-dimension-size-600))\";\n  const width =\n    \"calc(var(--spectrum-global-dimension-size-3600) - var(--spectrum-global-dimension-size-900))\";\n\nconst updatePadding = !enablePicker ?  \"padding-top: var(--spectrum-global-dimension-size-1000)\":\"\";\n\n    return (\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding-bottom: var(--spectrum-global-dimension-size-500);\n\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(2)}  !important;\n          background: var(--spectrum-global-color-gray-100);\n          padding-bottom: 0;\n        }\n\n        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) and (min-width: ${MOBILE_SCREEN_WIDTH}) {\n          width:100% !important;\n          background: var(--spectrum-global-color-gray-100);;\n          padding-bottom: 0;\n        }\n      `}\n    >\n      <div\n      css={css`\n      max-width: ${containerWidth};\n      margin: auto;\n\n       @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          width: ${layoutColumns(3)} !important;\n          background:var(--spectrum-global-color-gray-100);\n        }\n        ${updatePadding}\n      `}>\n      {interaction && enablePicker && (\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            height: var(--spectrum-global-dimension-size-800);\n            justify-content: flex-end;\n            margin-right: var(--spectrum-global-dimension-size-400);\n          `}\n        >\n          <Picker\n            isQuiet\n            items={additionalFilters.slice(0, 2).map((filter) => {\n              return filter.value === orderBy\n                ? {\n                    selected: true,\n                    ...filter,\n                  }\n                : filter;\n            })}\n            aria-label=\"Filter by name or last updated product\"\n            onChange={(index) => {\n              setAdditionalFilter(additionalFilters[index].value);\n            }}\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            align-items: flex-start;\n            flex-wrap: wrap;\n          }\n        `}\n      >\n        {interaction && (\n          <div\n            css={css`\n              display: flex;\n              align-items: flex-end;\n              width: var(--spectrum-global-dimension-size-3000);\n              flex-direction: column;\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n              `}\n            >\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}\n              >\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  display: flex;\n                  flex-direction: column;\n                `}\n              >\n                {clouds.map((cloud, i) => (\n                  <Checkbox\n                    key={i}\n                    value={cloud}\n                    onChange={(checked) => {\n                      if (checked) {\n                        setCloudFilter([...cloudFilter, cloud]);\n                      } else {\n                        setCloudFilter(\n                          cloudFilter.filter((filter) => filter !== cloud)\n                        );\n                      }\n                    }}\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}\n                  >\n                    {cloud}\n                  </Checkbox>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div\n          css={css`\n            flex: 1;\n          `}\n        >\n          <div\n            css={css`\n              display: grid;\n              grid-template-columns: repeat(auto-fit, ${width});\n              grid-auto-rows: ${height};\n              justify-content: center;\n              gap: var(--spectrum-global-dimension-size-400);\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                margin-top: var(--spectrum-global-dimension-size-400);\n                display: flex;\n                flex-wrap: wrap;\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: hidden;\n                width: ${layoutColumns(3)};\n                background: var(--spectrum-global-color-gray-100);\n             }\n            `}\n          >\n            {filteredProducts.map((product) => (\n              <div\n                key={product.id}\n                className=\"spectrum-Card spectrum-Card--sizeM\"\n                css={css`\n                  width: ${width};\n                  height: ${height};\n                  border: ${showBorder\n                    ? \"none\"\n                    : \"var(--spectrum-global-color-gray-200)\"};\n                    background: var(--spectrum-global-color-gray-100);\n                  align-items: center;\n                  &:hover {\n                    border-color: var(--spectrum-global-color-gray-200);\n                  }\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    width: 0;\n                  }\n                  \n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    height:calc(var(--spectrum-global-dimension-size-5000) - var(--spectrum-global-dimension-size-1700));\n                  }\n                `}\n              >\n                <div\n                  className=\"spectrum-Card-body\"\n                  css={css`\n                    height: var(--spectrum-global-dimension-size-4000);\n                    overflow: auto;\n                    padding-top: 0;\n                    padding-bottom: 0;\n                    align-items: center;\n                    display: flex;\n                    flex-direction: column;\n\n                  `}\n                >\n                  {product.icon && (\n                    <div\n                      css={css`\n                        height: var(\n                          --spectrum-global-dimension-size-${imgHeight}\n                        );\n                        width: 140px;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-200\n                        );\n                      `}\n                    >\n                      <Image\n                        src={product.icon}\n                        aria-hidden=\"true\"\n                        alt={\"\"}\n                        title={\"\"}\n                      />\n                    </div>\n                  )}\n                  {showName && (\n                    <div\n                      className=\"spectrum-Card-header spectrum-Heading spectrum-Heading--sizeXS\"\n                      css={css`\n                        height: var(--spectrum-global-dimension-size-600);\n                        justify-content: center;\n                        align-items: center;\n                        margin-top: 0 !important;\n                        margin-bottom: var(\n                          --spectrum-global-dimension-size-100\n                        ) !important;\n                      `}\n                    >\n                      <div\n                        className=\"spectrum-Card-title\"\n                        css={css`\n                          font-size: var(--spectrum-global-dimension-size-200);\n                          padding-right: 0;\n                        `}\n                      >\n                        <strong>{product.name}</strong>\n                      </div>\n                    </div>\n                  )}\n                  {showDescription && (\n                    <div\n                      className=\"spectrum-Card-content spectrum-Body spectrum-Body--sizeS\"\n                      css={css`\n                        height: auto;\n                        margin-bottom: 0 !important;\n                      `}\n                    >\n                      {product.description}\n                    </div>\n                  )}\n                </div>\n                <div\n                  className={showBorder ? \"spectrum-Card-footer\" : \"\"}\n                  css={css`\n                    display: flex;\n                    justify-content: ${isCentered ? \"center\" : \"flex-end\"};\n                    flex-wrap: wrap;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      justify-content: center;\n                    }\n\n                    padding-top: 0;\n                    padding-bottom: 0;\n                  `}\n                >\n                  {product.discover && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton\n                        isQuiet\n                        href={product.discover}\n                        variant=\"primary\"\n                        css={css`\n                          border-color: #4b4b4b !important;\n                          border-width: 2px;\n                        `}\n                      >\n                        {buttonName}\n                      </AnchorButton>\n                    </div>\n                  )}\n\n                  {product.docs && (\n                    <div\n                      css={css`\n                        margin: var(--gap) 0 0 var(--gap);\n                      `}\n                    >\n                      <AnchorButton href={product.docs} variant=\"primary\">\n                        View docs\n                      </AnchorButton>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      </div>\n    </section>\n  );\n};\n\nProductCardGrid.propTypes = {\n  clouds: PropTypes.array,\n  products: PropTypes.array,\n  orderBy: PropTypes.string,\n  filterBy: PropTypes.array,\n  interaction: PropTypes.bool,\n  showName: PropTypes.bool,\n  showDescription: PropTypes.bool,\n  isCentered: PropTypes.bool,\n  showBorder: PropTypes.bool,\n  imgHeight: PropTypes.string,\n  enablePicker:PropTypes.bool,\n};\n\nexport { ProductCardGrid };"],"names":["additionalFilters","title","value","filter","products","sort","_ref18","_ref19","lastUpdated","lastUpdatedA","lastUpdatedB","Date","_ref16","_ref17","name","nameA","nameB","localeCompare","ids","filteredProducts","forEach","productId","product","find","_ref20","id","push","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","ProductCardGrid","_ref21","clouds","interaction","orderBy","filterByCloud","filterByIds","buttonName","showName","showDescription","showBorder","imgHeight","isCentered","className","containerWidth","DESKTOP_SCREEN_WIDTH","theme","enablePicker","length","defaultFilter","_ref22","additionalFilter","setAdditionalFilter","useState","setFilteredProducts","cloudFilter","setCloudFilter","useEffect","filterByClouds","_ref15","cloud","some","selectedCloud","_orderBy","height","width","updatePadding","___EmotionJSX","classNames","css","MOBILE_SCREEN_WIDTH","layoutColumns","TABLET_SCREEN_WIDTH","Picker","isQuiet","items","slice","map","_objectSpread","selected","onChange","index","i","Checkbox","key","checked","concat","_toConsumableArray","icon","Image","src","alt","description","discover","AnchorButton","href","variant","docs"],"sourceRoot":""}