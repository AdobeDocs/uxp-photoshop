(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{Ucfl:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n("wx14"),i=n("zLVn"),r=(n("q1tI"),n("7ljp")),s=n("ndZU"),c=(n("qKvR"),{}),o={_frontmatter:c},p=s.a;function l(e){var t=e.components,s=Object(i.a)(e,["components"]);return Object(r.mdx)(p,Object(a.a)({},o,s,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"designing-a-plugin-experience"},"Designing a plugin experience"),Object(r.mdx)("p",null,"These guidelines will help you define the best user experience for your plugin. As you create a plugin, consider different UX patterns and UI components based on your user’s workflow and the plugin action."),Object(r.mdx)("p",null," Plugins can interact with a user’s experience at different levels, for example, some plugins in some use cases won’t render an interface, and some will include actions that need an interface."),Object(r.mdx)("h2",{id:"designing-a-plugin"},"Designing a plugin"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Learn more about the types interfaces available to plugins.")),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"th"},"Plugins panel")),Object(r.mdx)("th",Object(a.a)({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"th"},"Plugins dialog")))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"td"},"non-blocking UI:")," This interface is best used when the user should have access to the canvas while using the plugin."),Object(r.mdx)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.mdx)("strong",{parentName:"td"},"blocking UI:")," This interface is best used when the plugin needs to run an action and the user shouldn’t modify or change selection of objects on the canvas.")))),Object(r.mdx)("p",null,Object(r.mdx)("img",{alt:"Examples showing the plugins panel interface and the plugins dialog interface",src:n("jpw0")})),Object(r.mdx)("h2",{id:"ux-patterns"},"UX patterns"),Object(r.mdx)("p",null,"User experience patterns highlight UX requirements and best practices, as well as provide guidance on how to interact with your plugin users within Adobe."),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-photoshop/design/ux-patterns/"}),"View UX patterns")),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-photoshop/design/ux-patterns/Designingforphotoshop/"}),"Designing for photoshop")),Object(r.mdx)("h2",{id:"user-interface"},"User interface"),Object(r.mdx)("p",null,"The user interface section will have information on UXP Spectrum components you can use to build your plugin interface. "),Object(r.mdx)("p",null,Object(r.mdx)("a",Object(a.a)({parentName:"p"},{href:"/uxp-photoshop/design/user-interface/index/"}),"View user interface components")))}l.isMDXComponent=!0},jpw0:function(e,t,n){e.exports=n.p+"static/Panel_Dialog_examples-6ab3a74dfc3795f30c63e740d914da47.png"}}]);
//# sourceMappingURL=component---src-pages-design-index-md-8518058aadc5923f7bc1.js.map