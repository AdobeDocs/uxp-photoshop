"use strict";(self.webpackChunkuxp_photoshop_documentation=self.webpackChunkuxp_photoshop_documentation||[]).push([[48456],{35172:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return p}});var a=t(87462),l=t(63366),r=(t(15007),t(64983)),o=t(91515),i=["components"],m={},d={_frontmatter:m},s=o.Z;function p(e){var n=e.components,t=(0,l.Z)(e,i);return(0,r.mdx)(s,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"how-uxp-scripting-works"},"How UXP Scripting Works"),(0,r.mdx)("p",null,"Each Photoshop script file is a plain text file with a ",(0,r.mdx)("inlineCode",{parentName:"p"},".psjs")," file extension. We plan on expanding UXP scripting to other applications and supporting opening scripts via double-click in the future. When this happens, the file extension will help identify which application the script should be launched in. "),(0,r.mdx)("h2",{id:"execution-context"},"Execution Context"),(0,r.mdx)("p",null,"Photoshop sets an execution context while invoking a script."),(0,r.mdx)("p",null,"Within an execution context, only one script can be executed at a time. You cannot invoke another script from the running script. Using the UXP script module, you can access ",(0,r.mdx)("inlineCode",{parentName:"p"},"ExecutionContext"),"."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'const script = await require("uxp").script;\nconst executionContext = script.executionContext;\n')),(0,r.mdx)("p",null,"It provides details about the current script execution, methods to send data to Photoshop, and events to manage script lifecycles. You can also use methods belonging to ",(0,r.mdx)("inlineCode",{parentName:"p"},"executionControl.hostControl")," to suspend/resume history states and auto close documents. Read more in the scripting ",(0,r.mdx)("a",{parentName:"p",href:"../reference/"},"reference"),"."),(0,r.mdx)("h2",{id:"events"},"Events"),(0,r.mdx)("p",null,"Script execution can be cancelled when: "),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},'a user clicks on "Cancel" in the progress bar'),(0,r.mdx)("li",{parentName:"ul"},"Photoshop encounters some exception in running a script file ")),(0,r.mdx)("p",null,'Script developers can add event handlers to get notified when the command has been cancelled. The callback will receive "reason" as a parameter. '),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'executionContext.onCancel.addListener((reason) => {\n    // reason would be a json object set by PS while cancelling\n    reject("Message");\n});\n')),(0,r.mdx)("h2",{id:"user-interface"},"User Interface"),(0,r.mdx)("p",null,"Scripts can only show a dialog UI. Any UI created by a script is modal in naturel By ",(0,r.mdx)("em",{parentName:"p"},"not")," using ",(0,r.mdx)("inlineCode",{parentName:"p"},"await")," for ",(0,r.mdx)("inlineCode",{parentName:"p"},"showModal()")," (not letting it return a Promise), execution can continue to completion at which point any UI is destroyed. If you don't see your modal UI appear, check that there is an ",(0,r.mdx)("inlineCode",{parentName:"p"},"await")," in front of it."),(0,r.mdx)("p",null,"Photoshop automatically shows a ",(0,r.mdx)("strong",{parentName:"p"},"progress bar")," if the script takes more than 2-3 seconds to finish."),(0,r.mdx)("h3",{id:"global-await"},"Global Await"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"await")," expressions cause ",(0,r.mdx)("inlineCode",{parentName:"p"},"async")," function execution to pause until a Promise is either fulfilled or rejected, and to resume execution\nof the ",(0,r.mdx)("inlineCode",{parentName:"p"},"async")," function after fulfillment. When resumed, the value of the ",(0,r.mdx)("inlineCode",{parentName:"p"},"await")," expression is that of the fulfilled Promise."),(0,r.mdx)("p",null,"Global await means awaiting for a global scope async function to finish. "),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'function anyAsyncFunction() {\n    return new Promise((resolve, reject) => {\n        const val = Math.random();\n        if (val > 0.5) {\n            console.log("Resolve promise");\n            resolve(val);\n        } else {\n            console.error("Rejecting promise");\n            reject(val);\n        }\n    })\n}\n\n// Global await\ntry {\n    const val = await anyAsyncFunction();\n    console.log("Value from function", val);\n} catch {\n    console.log("Rejected promise!;")\n}\nconsole.log("Script completed");\n')),(0,r.mdx)("h2",{id:"permitted-uxp-modules"},"Permitted UXP Modules"),(0,r.mdx)("p",null,"With plugin development, developers define which UXP modules they want to access in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"manifest.json")," file. Script permissions are managed by Photoshop internally and no manifest configuration is required. "),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"At this time, not all UXP modules are accessible by scripts but we plan on enabling more modules in future UXP versions."),"  All modules that are currently supported are enabled by default:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"UXP Module"),(0,r.mdx)("th",{parentName:"tr",align:null},"Supported"),(0,r.mdx)("th",{parentName:"tr",align:null},"Current Access Level"),(0,r.mdx)("th",{parentName:"tr",align:null},"Sample"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Fonts"),(0,r.mdx)("td",{parentName:"tr",align:null},"Yes"),(0,r.mdx)("td",{parentName:"tr",align:null},"Installed fonts can be read"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"../samples/index.md#access-installed-fonts"},"View sample."))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Clipboard"),(0,r.mdx)("td",{parentName:"tr",align:null},"Yes"),(0,r.mdx)("td",{parentName:"tr",align:null},"Read/write access"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"../samples/index.md#readwrite-to-clipboard"},"View sample."))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"LocalFileSystem"),(0,r.mdx)("td",{parentName:"tr",align:null},"Yes"),(0,r.mdx)("td",{parentName:"tr",align:null},"File pickers can be used to open/save files. You can also call the ",(0,r.mdx)("inlineCode",{parentName:"td"},"getTemporaryFolder API")," to access a temporary data folder."),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"../samples/index.md#access-the-local-filesystem"},"View sample."))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"Network"),(0,r.mdx)("td",{parentName:"tr",align:null},"No"),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"LaunchProcess"),(0,r.mdx)("td",{parentName:"tr",align:null},"No"),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"WebView"),(0,r.mdx)("td",{parentName:"tr",align:null},"No"),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null})),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"IPC"),(0,r.mdx)("td",{parentName:"tr",align:null},"No"),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null})))),(0,r.mdx)("p",null,"If you need to use the UXP modules that are not yet enabled for scripts, you should opt to create a UXP plugin instead. "),(0,r.mdx)("h2",{id:"faq"},"FAQ"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"What are the required minimum versions for UDT (for debugging) and Photoshop?",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"UXP Scripting is available in Photoshop v23.5 and UDT v1.6."))),(0,r.mdx)("li",{parentName:"ul"},"Can you invoke a script from within another script? ",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"No, inter-script communication is not possible. "))),(0,r.mdx)("li",{parentName:"ul"},"Can you pass arguments to scripts? ",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"For this first release, passing arguments is not supported but ",(0,r.mdx)("strong",{parentName:"li"},"will be possible in a future release.")))),(0,r.mdx)("li",{parentName:"ul"},"Can scripts be executed from plugins? ",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"No; however, any UXP script code should be able to run from within a UXP plugin."))),(0,r.mdx)("li",{parentName:"ul"},"Can I enable permissions for a module?",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"Developers cannot enable or seek the permission for a module. By default, all permitted modules are enabled by Photoshop."))),(0,r.mdx)("li",{parentName:"ul"},"Why only a limited number of modules are permitted in PS? Do we expect other modules to be enabled in the future?",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},"This is the first release of the UXP script module, and weâ€™re working on enabling permissions to access more modules in upcoming releases.")))))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-scripting-how-it-works-index-md-d1bc7620976383114f71.js.map