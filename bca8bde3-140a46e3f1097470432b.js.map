{"version":3,"file":"bca8bde3-140a46e3f1097470432b.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/GlobalHeader/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport { withPrefix } from 'gatsby';\nimport { GatsbyLink } from '../GatsbyLink';\nimport {\n  findSelectedTopPage,\n  findSelectedTopPageMenu,\n  rootFix,\n  rootFixPages,\n  getExternalLinkProps,\n  DESKTOP_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME,\n} from '../../utils';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Button } from '../Button';\nimport { ProgressCircle } from '../ProgressCircle';\nimport { Adobe, ChevronDown, Magnify, Close, TripleGripper, CheckMark } from '../Icons';\nimport { ActionButton, Text as ActionButtonLabel } from '../ActionButton';\nimport { PickerButton } from '../Picker';\nimport { Menu, Item as MenuItem } from '../Menu';\nimport { Popover } from '../Popover';\nimport { Image } from '../Image';\nimport { Link } from '../Link';\nimport {\n  Tabs,\n  HeaderTabItem as TabsItem,\n  Label as TabsItemLabel,\n  TabsIndicator,\n  positionIndicator,\n  animateIndicator,\n} from '../Tabs';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/assetlist';\nimport { Divider } from '../Divider';\nimport DEFAULT_AVATAR from './avatar.svg';\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(\n    findSelectedTopPage(pathWithRootFix, pagesWithRootFix)\n  );\n  let tempArr = pathWithRootFix.split('/');\n  let inx = tempArr.indexOf('use-cases');\n  if (selectedIndex === -1 && inx > -1) {\n    tempArr[inx + 1] = 'agreements-and-contracts';\n    tempArr[inx + 2] = 'sales-proposals-and-contracts';\n    if (tempArr[inx + 3] == undefined) {\n      tempArr.push('');\n    }\n    let tempPathName = tempArr.join('/');\n    selectedIndex = pagesWithRootFix.indexOf(findSelectedTopPage(tempPathName, pagesWithRootFix));\n  }\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n  return selectedIndex;\n};\n\nconst getAvatar = async userId => {\n  try {\n    const req = await fetch(`https://cc-api-behance.adobe.io/v2/users/${userId}?api_key=SUSI2`);\n    const res = await req.json();\n    return res?.user?.images?.['138'] ?? DEFAULT_AVATAR;\n  } catch (e) {\n    console.warn(e);\n    return DEFAULT_AVATAR;\n  }\n};\n\nconst GlobalHeader = ({\n  hasIMS,\n  ims,\n  isLoadingIms,\n  home,\n  versions,\n  pages,\n  docs,\n  location,\n  toggleSideNav,\n  hasSideNav,\n  hasSearch,\n  showSearch,\n  setShowSearch,\n  searchButtonId,\n}) => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(getSelectedTabIndex(location, pages));\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const versionPopoverRef = useRef(null);\n  const profilePopoverRef = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openMenuIndex, setOpenMenuIndex] = useState(-1);\n  const [profile, setProfile] = useState(null);\n  const [avatar, setAvatar] = useState(DEFAULT_AVATAR);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n  const [selectedMenuItem, setSelectedMenuItem] = useState({});\n\n  const POPOVER_ANIMATION_DELAY = 200;\n  const versionPopoverId = 'version ' + nextId();\n  const profilePopoverId = 'profile ' + nextId();\n  const hasHome = home?.hidden !== true;\n\n  const positionSelectedTabIndicator = index => {\n    const selectedTab = pages[index].tabRef;\n\n    if (selectedTab?.current) {\n      positionIndicator(selectedTabIndicatorRef, selectedTab);\n    }\n  };\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, pages);\n    setSelectedTabIndex(index);\n    const pathWithRootFix = rootFix(location.pathname);\n    setSelectedMenuItem(findSelectedTopPageMenu(pathWithRootFix, pages[index]));\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator(index);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setAvatar(await getAvatar(profile.userId));\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims]);\n\n  useEffect(() => {\n    if (versionPopoverRef.current) {\n      if (openVersion) {\n        const { left } = versionPopoverRef.current.getBoundingClientRect();\n\n        versionPopoverRef.current.style.left = `calc(${left}px + var(--spectrum-global-dimension-size-160))`;\n        versionPopoverRef.current.style.position = 'fixed';\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopoverRef.current.style = '';\n        }, POPOVER_ANIMATION_DELAY);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    if (openMenuIndex !== -1) {\n      const menuRef = pages[openMenuIndex].menuRef;\n\n      const { left } = menuRef.current.getBoundingClientRect();\n\n      menuRef.current.style.left = `${left}px`;\n      menuRef.current.style.position = 'fixed';\n    } else {\n      pages.forEach(page => {\n        const menuRef = page.menuRef;\n        if (menuRef) {\n          // Wait for animation to finish\n          setTimeout(() => {\n            menuRef.current.style = '';\n          }, POPOVER_ANIMATION_DELAY);\n        }\n      });\n    }\n  }, [openMenuIndex]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = event => {\n      if (versionPopoverRef.current && !versionPopoverRef.current.contains(event.target)) {\n        setOpenVersion(false);\n      }\n\n      if (profilePopoverRef?.current && !profilePopoverRef.current.contains(event.target)) {\n        setOpenProfile(false);\n      }\n\n      pages.some(page => {\n        if (page?.menuRef?.current && !page.menuRef.current.contains(event.target)) {\n          setOpenMenuIndex(-1);\n        }\n      });\n    };\n\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n      setOpenMenuIndex(-1);\n    };\n\n    tabsContainerRef.current.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => tabsContainerRef.current.removeEventListener('scroll', onScroll);\n  }, []);\n\n  const openDropDown = data => {\n    if (data.isOpen) {\n      setOpenMenuIndex(data.index);\n      setOpenVersion(data.isOpen);\n      if (openMenuIndex === -1 || openMenuIndex !== data.index) {\n        setTimeout(() => {\n          document.getElementById(`menuIndex${data.index}-0`).focus();\n        }, 100);\n      }\n    }\n  };\n\n  const handleCredential = () => {\n\n    const section = document.getElementById('adobe-get-credential');\n\n    if (section) {\n      section.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'center',\n      });\n    }\n\n  }\n\n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid\n          var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          border-bottom: none;\n        }\n      `}>\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\">\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: 'title navigation optional';\n            grid-template-columns: minmax(auto, min-content) auto minmax(auto, min-content);\n            align-items: center;\n            margin-right: var(--spectrum-global-dimension-size-200);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}>\n          <div\n            css={css`\n              display: none;\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                grid-area: title;\n                display: block;\n                margin: 0 var(--spectrum-global-dimension-size-100);\n              }\n            `}>\n            <ActionButton\n              isQuiet\n              onClick={() => {\n                toggleSideNav && toggleSideNav();\n              }}>\n              <TripleGripper />\n            </ActionButton>\n          </div>\n\n          <div\n            css={css`\n              height: 100%;\n              @media screen and (min-width: ${MOBILE_SCREEN_WIDTH}) {\n                grid-area: title;\n                padding-left: ${!hasSideNav ? 'var(--spectrum-global-dimension-size-200)' : '0'};\n              }\n              @media screen and (width: 768px ){\n                margin-left: 40px;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}>\n              <div\n                css={css`\n                  display: flex;\n                  height: 100%;\n                  align-items: center;\n                `}>\n                <a\n                  href=\"/\"\n                  tabIndex={'0'}\n                  id=\"adobeIcon\"\n                  onKeyDown={e => {\n                    if (e.key === 'ArrowRight') {\n                      document.getElementById('product').focus();\n                    }\n                  }}\n                  css={css`\n                    display: flex;\n                    height: 100%;\n                    text-decoration: none;\n                    padding-left: var(--spectrum-global-dimension-size-400);\n                    padding-right: var(--spectrum-global-dimension-size-300);\n                    padding-bottom: var(--spectrum-global-dimension-size-25);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      padding-left: 0;\n                      padding-right: 0;\n                    }\n                  `}>\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n                    `}>\n                    <Adobe\n                      css={css`\n                        width: calc(\n                          var(--spectrum-global-dimension-size-250) +\n                            var(--spectrum-global-dimension-size-25)\n                        );\n                        height: var(--spectrum-global-dimension-size-225);\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong\n                      className=\"spectrum-Heading spectrum-Heading--sizeXXS\"\n                      css={css`\n                        color: #fa0f00;\n                        font-size: calc(\n                          var(--spectrum-global-dimension-size-200) -\n                            var(--spectrum-global-dimension-size-10)\n                        );\n                        font-weight: 700;\n                        white-space: nowrap;\n                      `}>\n                      <span\n                        css={css`\n                          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                            display: none;\n                          }\n                        `}>\n                        Adobe&nbsp;\n                      </span>\n                      Developer\n                    </strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasHome && (\n                <div\n                  css={css`\n                    height: calc(100% + var(--spectrum-global-dimension-size-10));\n                    border-left: var(--spectrum-global-dimension-size-10) solid\n                      var(--spectrum-global-color-gray-200);\n                    border-right: var(--spectrum-global-dimension-size-10) solid\n                      var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}>\n                  <Link isQuiet variant=\"secondary\">\n                    <a\n                      tabIndex={'0'}\n                      id={'product'}\n                      // onBlur={()=>setOpenMenuIndex(-1)}\n                      onKeyDown={e => {\n                        if (e.key === 'ArrowLeft') {\n                          document.getElementById('adobeIcon').focus();\n                        }\n                        if (e.key === 'ArrowRight') {\n                          document.getElementById('tabindex0').focus();\n                        }\n                      }}\n                      css={css`\n                        display: flex;\n                        height: calc(100% - var(--spectrum-global-dimension-size-10));\n                        align-items: center;\n                        justify-content: center;\n                        box-sizing: border-box;\n                        padding: 0 var(--spectrum-global-dimension-size-300);\n                        white-space: nowrap;\n                        color: var(--spectrum-global-color-gray-700);\n                        transition: background-color var(--spectrum-global-animation-duration-100)\n                            ease-out,\n                          color var(--spectrum-global-animation-duration-100) ease-out;\n\n                        &:hover {\n                          background-color: var(--spectrum-global-color-gray-75);\n                          color: var(--spectrum-global-color-gray-900);\n                          text-decoration: none;\n                        }\n                      `}\n                      href={home?.href || DEFAULT_HOME.href}\n                      {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                      {home?.title || DEFAULT_HOME.title}\n                    </a>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              ${hasHome && 'margin-left: var(--spectrum-global-dimension-size-200);'}\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                ${!hasHome && 'margin-left: var(--spectrum-global-dimension-size-300);'}\n\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                -ms-overflow-style: none;\n                scrollbar-width: none;\n\n                &::-webkit-scrollbar {\n                  display: none;\n                }\n\n                margin-right: var(--spectrum-global-dimension-size-3000);\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                display: none;\n                position: absolute;\n                top: calc(\n                  var(--spectrum-global-dimension-size-600) -\n                    var(--spectrum-global-dimension-size-10)\n                );\n                height: var(--spectrum-global-dimension-size-600);\n                left: 0;\n                right: 0;\n                margin-left: 0;\n                margin-right: 0;\n                background-color: var(--spectrum-global-color-gray-50);\n                border-bottom: var(--spectrum-global-dimension-size-10) solid\n                  var(--spectrum-global-color-gray-200);\n              }\n            `}>\n            <div\n              css={css`\n                display: none;\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  display: block;\n                  pointer-events: none;\n                  position: fixed;\n                  top: var(--spectrum-global-dimension-size-600);\n                  height: calc(\n                    var(--spectrum-global-dimension-size-600) -\n                      var(--spectrum-global-dimension-size-25)\n                  );\n                  right: 0;\n                  width: var(--spectrum-global-dimension-size-300);\n                  background: -webkit-linear-gradient(0deg, rgba(255, 255, 255, 0), white);\n                  z-index: 1;\n                }\n              `}\n            />\n\n            <Tabs\n              css={css`\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding-bottom: 0;\n                  margin-top: 0;\n                }\n              `}\n              isHeader={true}\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator(selectedTabIndex);\n                setIsAnimated(true);\n              }}>\n              {hasHome && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}>\n                  <TabsItem\n                    elementType={GatsbyLink}\n                    to={home?.href || DEFAULT_HOME.href}\n                    {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                    <TabsItemLabel>{home?.title || DEFAULT_HOME.title}</TabsItemLabel>\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const isSelectedTab = selectedTabIndex === i;\n                const menuPopoverId = 'menu ' + nextId();\n                const setTabRef = element => {\n                  page.tabRef = { current: element };\n                };\n\n                const setTabMenuRef = element => {\n                  page.menuRef = { current: element };\n                };\n\n                return (\n                  <Fragment key={i}>\n                    {page.href ? (\n                      <TabsItem\n                        className={isSelectedTab ? 'isSelected' : ''}\n                        css={css`\n                          ${isSelectedTab &&\n                          `\n                          color: var(--spectrum-global-color-gray-900);\n                        `}\n                        `}\n                        onFocus={() => {\n                          setOpenMenuIndex(-1);\n                        }}\n                        elementType={GatsbyLink}\n                        {...getExternalLinkProps(page.href)}\n                        ref={setTabRef}\n                        id={`tabindex${i}`}\n                        to={withPrefix(page.href)}\n                        selected={isSelectedTab}>\n                        <TabsItemLabel> {page.title} </TabsItemLabel>\n                      </TabsItem>\n                    ) : (\n                      <TabsItem\n                        tabIndex={'0'}\n                        id={`tabindex${i}`}\n                        className={isSelectedTab ? 'isSelected' : ''}\n                        //  onFocus={()=>{setOpenMenuIndex(-1)}}\n                        index={i}\n                        hasDropdown\n                        openDropDown={openDropDown}\n                        css={css`\n                          ${openMenuIndex === i &&\n                          `\n                          &:after {\n                            content: '';\n                            position: absolute;\n                            z-index: -1;\n                            height: var(--spectrum-global-dimension-size-800);\n                            width: calc(100% + var(--spectrum-global-dimension-size-250));\n                            left: calc(-1 * var(--spectrum-global-dimension-size-125));\n                            top: calc(-1 * var(--spectrum-global-dimension-size-100));\n                            background-color: var(--spectrum-global-color-gray-100);\n                          }\n                        `}\n                          ${isSelectedTab &&\n                          `\n                          color: var(--spectrum-global-color-gray-900);\n                        `}\n                        `}\n                        ref={setTabRef}\n                        selected={isSelectedTab}\n                        aria-controls={menuPopoverId}\n                        aria-label={page.title}\n                        onClick={event => {\n                          event.stopImmediatePropagation();\n\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                        <ChevronDown\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-125) !important;\n                            height: var(--spectrum-global-dimension-size-125) !important;\n                            margin-left: var(--spectrum-global-dimension-size-100);\n                            transition: transform var(--spectrum-global-animation-duration-100)\n                              ease-in-out;\n                            ${openMenuIndex === i && `transform: rotate(-90deg);`}\n                          `}\n                        />\n                        <div\n                          onClick={event => {\n                            event.stopImmediatePropagation();\n\n                            setOpenVersion(false);\n                            setOpenProfile(false);\n                            setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                          }}\n                          role=\"button\"\n                          tabIndex={0}\n                          aria-label={page.title}\n                          onFocus={() => {\n                            setOpenMenuIndex(i);\n                          }}>\n                          <Popover\n                            ref={setTabMenuRef}\n                            id={menuPopoverId}\n                            css={css`\n                              margin-left: calc(-1 * var(--spectrum-global-dimension-size-65));\n                              margin-top: var(--spectrum-global-dimension-size-25);\n                              border-top-left-radius: 0;\n                              border-top-right-radius: 0;\n                              top: var(--spectrum-global-dimension-size-700);\n                              ${page.menu.some(menu => menu.description) &&\n                              `width: 230px;`}\n\n                              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                                margin-top: calc(-1 * var(--spectrum-global-dimension-size-40));\n                              }\n                            `}\n                            isOpen={openMenuIndex === i}>\n                            <Menu>\n                              {page.menu.map((menu, k) => {\n                                const pathWithRootFix = rootFix(location.pathname);\n                                const selectedMenu = findSelectedTopPageMenu(pathWithRootFix, page);\n                                const menuHref = withPrefix(menu.href);\n                                return (\n                                  <MenuItem\n                                    className=\"spectrum-Link spectrum-Link--quiet\"\n                                    key={k}\n                                    tabIndex=\"0\"\n                                    id={`menuIndex${i}-${k}`}\n                                    href={menuHref}\n                                    {...getExternalLinkProps(menuHref)}\n                                    isHighlighted={menu === selectedMenu}\n                                    isSelected={menu === selectedMenuItem}\n                                    isHeightUnset={menu.description ? true : false}\n                                    css={css`\n                                      display: -webkit-box;\n                                      display: -webkit-flex;\n                                      display: -ms-flexbox;\n                                      display: flex;\n                                      height: calc(\n                                        100% - var(--spectrum-global-dimension-size-10)\n                                      ) !important;\n                                      -webkit-align-items: center;\n                                      -webkit-box-align: center;\n                                      -ms-flex-align: center;\n                                      align-items: center;\n                                      -webkit-box-pack: center;\n                                      -ms-flex-pack: center;\n                                      -webkit-justify-content: center;\n                                      justify-content: center;\n                                      box-sizing: border-box;\n                                      padding: ${selectedMenu !== undefined && \"0 var(--spectrum-global-dimension-size-175) !important\"};\n                                      margin-right: ${selectedMenu === undefined && \"var(--spectrum-global-dimension-size-175) !important; \"}\n                                      white-space: nowrap;\n                                      color: var(--spectrum-global-color-gray-700) !important;\n                                      -webkit-transition: background-color\n                                          var(--spectrum-global-animation-duration-100) ease-out,\n                                        color var(--spectrum-global-animation-duration-100) ease-out;\n                                      transition: background-color\n                                          var(--spectrum-global-animation-duration-100) ease-out,\n                                        color var(--spectrum-global-animation-duration-100) ease-out;\n\n                                      &:hover {\n                                        background-color: var(\n                                          --spectrum-global-color-gray-75\n                                        ) !important;\n                                        color: var(--spectrum-global-color-gray-900) !important;\n                                        text-decoration: none !important;\n                                      }\n\n                                      &>div>div{\n                                        width:var(--spectrum-global-dimension-size-100) !important;\n                                      }\n\n                                      &>div>div>svg{\n                                        padding : 0 !important;\n                                      }\n\n                                    `}\n                                    onKeyDown={e => {\n                                      if (e.key === 'ArrowDown') {\n                                        e.preventDefault();\n\n                                        if (k + 1 === page.menu.length) {\n                                          setTimeout(() => {\n                                            setOpenMenuIndex(-1);\n                                            if (pages.length === i + 1) {\n                                              document.getElementById('getCredentialID').focus();\n                                            } else {\n                                              document.getElementById(`tabindex${i + 1}`).focus();\n                                            }\n                                          }, 100);\n                                        } else {\n                                          e.preventDefault();\n                                          e.currentTarget.nextElementSibling &&\n                                            e.currentTarget.nextElementSibling.focus();\n                                        }\n                                      }\n                                      if (e.key === 'ArrowUp') {\n                                        e.preventDefault();\n                                        var event = e;\n                                        if (k === 0) {\n                                          setOpenMenuIndex(-1);\n                                          setTimeout(() => {\n                                            document.getElementById(`tabindex${i}`).focus();\n                                          }, 100);\n                                        }\n                                        event.currentTarget.previousElementSibling &&\n                                          e.currentTarget.previousElementSibling.focus();\n                                      }\n                                      if (e.key === 'ArrowRigt') {\n                                        e.preventDefault();\n                                        e.currentTarget.nextElementSibling &&\n                                          e.currentTarget.nextElementSibling.focus();\n                                      }\n                                      if (e.key === 'ArrowLeft') {\n                                        e.preventDefault();\n                                        if (k === 0) {\n                                          document.getElementById(`tabindex${i}`).focus();\n                                        }\n                                        e.currentTarget.previousElementSibling &&\n                                          e.currentTarget.previousElementSibling.focus();\n                                      }\n                                      if (e.key === 'Enter') {\n                                        e.currentTarget.focus();\n                                      }\n                                    }}>\n                                    {menu.description ? (\n                                      <div\n                                        css={css`\n                                          margin: var(--spectrum-global-dimension-size-100) 0;\n                                        `}>\n                                        <div\n                                          css={css`\n                                            color: var(--spectrum-global-color-gray-900);\n                                          `}>\n                                          {menu.title}\n                                        </div>\n\n                                        <div\n                                          className=\"spectrum-Body spectrum-Body--sizeXS\"\n                                          css={css`\n                                            white-space: normal;\n                                            margin-top: var(--spectrum-global-dimension-size-50);\n                                          `}>\n                                          {menu.description}\n                                        </div>\n                                      </div>\n                                    ) : (\n                                      <div\n                                        css={css`\n                                          margin-top: var(--spectrum-global-dimension-size-50);\n                                          margin-bottom: var(--spectrum-global-dimension-size-50);\n                                        `}>\n                                        {menu.title}\n                                      </div>\n                                    )}\n                                  </MenuItem>\n                                );\n                              })}\n                            </Menu>\n                          </Popover>\n                        </div>\n                      </TabsItem>\n                    )}\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(--spectrum-global-dimension-size-100) !important;\n                          margin-right: var(--spectrum-global-dimension-size-300);\n                        `}>\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={event => {\n                            event.stopImmediatePropagation();\n\n                            setOpenMenuIndex(-1);\n                            setOpenProfile(false);\n                            setOpenVersion(open => !open);\n                          }}>\n                          {versions.find(({ selected }) => selected)?.title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopoverRef}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}\n                          css={css`\n                              top: var(--spectrum-global-dimension-size-700);\n                           `}>\n                          <Menu>\n                            {versions.map((version, k) => (\n                              <MenuItem\n                                key={k}\n                                isSelected={version.selected}\n                                isHighlighted={version.selected}\n                                onClick={() => {\n                                  setOpenVersion(false);\n                                }}\n                                href={version.href}\n                                {...getExternalLinkProps(version.href)}>\n                                  <div\n                                    css={css`\n                                      margin-top: var(--spectrum-global-dimension-size-50);\n                                      margin-bottom: var(--spectrum-global-dimension-size-50);\n                                    `}>\n                                        {version.title}\n                                  </div>\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(-1 * var(--spectrum-global-dimension-size-125)) !important;\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    bottom: 0px !important;\n                  }\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    white-space: nowrap;\n                  `}>\n                  <AnchorButton\n                    onFocus={e => {\n                      setOpenMenuIndex(-1);\n                    }}\n                    onKeyDown={e => {\n                      if (e.key === 'ArrowLeft') {\n                        document.getElementById('tabindex5').focus();\n                      }\n                    }}\n                    id={'getCredentialID'}\n                    onClick={handleCredential}\n                    variant=\"primary\"\n                    href={docs.href && withPrefix(docs.href)}>\n                    {docs.title ?? 'View Docs'}\n                  </AnchorButton>\n                </div>\n              )}\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}>\n            <div\n              css={css`\n                display: flex;\n              `}>\n              {hasSearch && (\n                <ActionButton\n                  id={searchButtonId}\n                  onClick={() => {\n                    setShowSearch(show => !show);\n                  }}\n                  aria-label={showSearch ? 'Close Search' : 'Search'}\n                  isQuiet\n                  tabIndex=\"0\"\n                  css={css`\n                    margin-right: var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-right: 0;\n                    }\n                    &:focus {\n                      border: 2px solid #007aff !important;\n                      border-radius: 15% !important;\n                    }\n                  `}>\n                  {showSearch ? <Close /> : <Magnify />}\n                </ActionButton>\n              )}\n              <div\n                css={css`\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: none;\n                  }\n                `}>\n                <AnchorButton variant=\"primary\" href=\"/console\" id={'consoleId'} tabIndex=\"0\">\n                  Console\n                </AnchorButton>\n              </div>\n\n              {hasIMS && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: auto;\n                    // width: var(--spectrum-global-dimension-size-800);\n                  `}>\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(-1 * var(--spectrum-global-dimension-size-25));\n                      &:focus {\n                        border: 2px solid #007aff !important;\n                        border-radius: 15% !important;\n                        padding-right: 5px;\n                      }\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    tabIndex=\"0\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}>\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <button\n                      aria-label=\"Profile\"\n                      aria-controls={profilePopoverId}\n                      aria-expanded={openProfile}\n                      onClick={event => {\n                        event.stopImmediatePropagation();\n\n                        setOpenVersion(false);\n                        setOpenMenuIndex(-1);\n                        setOpenProfile(open => !open);\n                      }}\n                      css={css`\n                        display: block;\n                        padding: 0;\n                        border: none;\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(--spectrum-global-dimension-static-percent-50);\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}>\n                      <Image alt=\"Avatar\" src={avatar} />\n                    </button>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopoverRef}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(-1 * var(--spectrum-global-dimension-size-3000));\n                      `}>\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}>\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(--spectrum-global-dimension-static-percent-50);\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(--spectrum-global-dimension-size-400);\n                            margin-bottom: var(--spectrum-global-dimension-size-200);\n                          `}>\n                          <Image alt=\"\" src={avatar} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}>\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}>\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton href=\"https://account.adobe.com/\" variant=\"primary\" isQuiet>\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          tabIndex=\"0\"\n                          variant=\"primary\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}>\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  ims: PropTypes.object,\n  isLoadingIms: PropTypes.bool,\n  home: PropTypes.object,\n  versions: PropTypes.array,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  hasSearch: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  searchButtonId: PropTypes.string,\n};\n\nexport { GlobalHeader };\n"],"names":["getSelectedTabIndex","location","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","tempArr","split","inx","undefined","push","tempPathName","join","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","GlobalHeader","_ref27","_docs$title","hasIMS","ims","isLoadingIms","home","versions","docs","toggleSideNav","hasSideNav","hasSearch","showSearch","setShowSearch","searchButtonId","selectedTabIndex","setSelectedTabIndex","useState","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","isAnimated","setIsAnimated","versionPopoverRef","profilePopoverRef","openVersion","setOpenVersion","openProfile","setOpenProfile","openMenuIndex","setOpenMenuIndex","profile","setProfile","avatar","setAvatar","DEFAULT_AVATAR","isLoadingProfile","setIsLoadingProfile","selectedMenuItem","setSelectedMenuItem","versionPopoverId","nextId","profilePopoverId","hasHome","hidden","positionSelectedTabIndicator","index","selectedTab","tabRef","current","positionIndicator","useEffect","findSelectedTopPageMenu","animateIndicator","isSignedInUser","getProfile","async","_res$user$images$","_res$user","_res$user$images","req","fetch","userId","res","json","user","images","e","console","warn","getAvatar","left","getBoundingClientRect","style","position","setTimeout","menuRef","forEach","page","onClick","event","contains","target","some","_page$menuRef","document","addEventListener","removeEventListener","onScroll","passive","openDropDown","data","isOpen","getElementById","focus","___EmotionJSX","role","css","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","ActionButton","isQuiet","TripleGripper","href","tabIndex","id","onKeyDown","key","Adobe","className","Link","variant","_extends","DEFAULT_HOME","getExternalLinkProps","title","ref","Tabs","isHeader","onFontsReady","TabsItem","elementType","GatsbyLink","to","TabsItemLabel","map","i","_versions$find","isSelectedTab","menuPopoverId","setTabRef","element","Fragment","onFocus","withPrefix","selected","hasDropdown","stopImmediatePropagation","ChevronDown","Popover","menu","description","Menu","k","selectedMenu","menuHref","MenuItem","isHighlighted","isSelected","isHeightUnset","preventDefault","length","currentTarget","nextElementSibling","previousElementSibling","PickerButton","open","find","_ref28","version","TabsIndicator","AnchorButton","handleCredential","section","scrollIntoView","behavior","block","inline","show","Close","Magnify","ProgressCircle","size","signIn","ActionButtonLabel","Image","alt","src","displayName","Divider","Button","signOut"],"sourceRoot":""}