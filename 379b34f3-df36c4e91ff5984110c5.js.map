{"version":3,"file":"379b34f3-df36c4e91ff5984110c5.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndexList = await algolia.listIndices();\n    const filteredIndexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndexList = await algolia.listIndices();\n    const filteredIndexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, _highlightResult }) => {\n    let urlPath = ''\n    if (url.includes('https://developer.adobe.com')) {\n      urlPath = url.replace('https://developer.adobe.com', '');\n    } else {\n      urlPath = url;\n    }\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, searchIndex, indexAll, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const algoliaIndexList = await algolia.listIndices();\n    const indexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(indexes);\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        document.getElementById(\"aio-Search-close\").focus()\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          suggestionsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchSuggestionResults])\n\n    useEffect(() => {\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          searchResultsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n\n                  if (query.length && !searchResults.length) {\n                    setShowClear(true);\n\n                    const suggestions = await searchSuggestions(algolia, query, searchIndex, indexAll, existingIndices, setExistingIndices);\n\n                    if (suggestions?.results?.length) {\n                      const results = [];\n                      suggestions.results.forEach(({ hits }) => {\n                        mapSearchResults(hits, results);\n                      });\n                      setSearchSuggestionResults(results);\n\n                      if (!searchResults.length) {\n                        setShowSearchResults(false);\n                      }\n                    } else {\n                      setSearchSuggestionResults([]);\n                    }\n\n                    setIsSuggestionsOpen(true);\n                  } else {\n                    setShowClear(false);\n                    setIsSuggestionsOpen(false);\n                  }\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                `}\n                tabIndex=\"-1\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const content = searchSuggestion._highlightResult.content?.value ? searchSuggestion._highlightResult.content.value : \"\";\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const content = searchResult._highlightResult.content?.value ? searchResult._highlightResult.content.value : \"\";\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.object,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchSuggestions","algolia","query","searchIndex","indexAll","existingIndices","setExistingIndices","queries","length","listIndices","algoliaIndexList","filteredIndexes","Object","values","items","map","filter","indexName","includes","indexes","searchProductNames","product","localProductIndexes","getIndexesFromProduct","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","selected","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","isLoading","setIsLoading","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","indexOf","parent","postMessage","localProduct","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","useEffect","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","addEventListener","removeEventListener","onEscape","key","getElementById","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","e","suggestions","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","title","content","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","productName","isSelected","some","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}