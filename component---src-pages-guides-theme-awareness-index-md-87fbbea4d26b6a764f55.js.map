{"version":3,"sources":["webpack:///./src/pages/guides/theme-awareness/images/fonts-darkest.png","webpack:///./src/pages/guides/theme-awareness/images/fonts-lightest.png","webpack:///./src/pages/guides/theme-awareness/images/ps-theme-selection.png","webpack:///./src/pages/guides/theme-awareness/index.md"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","require","parentName","isMDXComponent"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,6D,qBCA3CD,EAAOC,QAAU,IAA0B,8D,qBCA3CD,EAAOC,QAAU,IAA0B,kE,8LCM9BC,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,kCADR,kCAGA,mBAAQ,CACN,GAAM,YADR,YAGA,0FACA,uBAAG,qBAAKC,IAAI,yBAAyBC,IAAKC,EAAQ,WAClD,wBACE,oBAAIC,WAAW,MAAf,WACA,oBAAIA,WAAW,MAAf,QACA,oBAAIA,WAAW,MAAf,SACA,oBAAIA,WAAW,MAAf,aAEF,6PACA,mBAAQ,CACN,GAAM,yBADR,yBAGA,iHAA8F,4BAAYA,WAAW,KAAvB,iBAA9F,qGACA,qMACA,wBACE,oBAAIA,WAAW,MAAf,+BACA,oBAAIA,WAAW,MAAf,yBACA,oBAAIA,WAAW,MAAf,2BACA,oBAAIA,WAAW,MAAf,8BACA,oBAAIA,WAAW,MAAf,4CACA,oBAAIA,WAAW,MAAf,sCACA,oBAAIA,WAAW,MAAf,yCAEF,2CACA,wBACE,oBAAIA,WAAW,MAAf,mCACA,oBAAIA,WAAW,MAAf,oCACA,oBAAIA,WAAW,MAAf,gCAEF,2EACA,wBACE,oBAAIA,WAAW,MAAf,wBACA,oBAAIA,WAAW,MAAf,gCACA,oBAAIA,WAAW,MAAf,gCAEF,mBAAQ,CACN,GAAM,4BADR,4BAGA,sGACA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6MASL,iKACA,yBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0NAWL,mBAAQ,CACN,GAAM,oBADR,qBAGA,oIACA,uEACA,uBAAG,qBAAKH,IAAI,gBAAgBC,IAAKC,EAAQ,WACzC,4EACA,uBAAG,qBAAKF,IAAI,iBAAiBC,IAAKC,EAAQ,YAK9CN,EAAWQ,gBAAiB","file":"component---src-pages-guides-theme-awareness-index-md-87fbbea4d26b6a764f55.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/fonts-darkest-76fdbbcc4e3a00a43d39ef249ae35030.png\";","module.exports = __webpack_public_path__ + \"static/fonts-lightest-de620784d8f852fe019b304c822c90b5.png\";","module.exports = __webpack_public_path__ + \"static/ps-theme-selection-af3b5bda253fd5e5bc711d55453117d4.png\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-parliament/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"making-your-plugin-theme-aware\"\n    }}>{`Making Your Plugin Theme-aware`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Photoshop allows the user to switch the UI between four themes:`}</p>\n    <p><img alt=\"Photoshop Theme Colors\" src={require(\"./images/ps-theme-selection.png\")} /></p>\n    <ul>\n      <li parentName=\"ul\">{`Darkest`}</li>\n      <li parentName=\"ul\">{`Dark`}</li>\n      <li parentName=\"ul\">{`Light`}</li>\n      <li parentName=\"ul\">{`Lightest`}</li>\n    </ul>\n    <p>{`If your plugin is not theme aware, it can look out of place (or possibly have unreadable text) when the user switches themes. It's very straightforward to add theme awareness to your plugin, so there's really no reason not to.`}</p>\n    <h2 {...{\n      \"id\": \"built-in-theme-colors\"\n    }}>{`Built-in Theme Colors`}</h2>\n    <p>{`The easiest way to make your plugin theme-aware is to make use of a CSS feature called `}<inlineCode parentName=\"p\">{`CSS variables`}</inlineCode>{`. CSS variables are just what they sound like: a way to have dynamic property definitions in CSS.`}</p>\n    <p>{`Luckily, Photoshop exposes a number of theme-specific CSS variables that are perfect for making your plugin respond to the user's theme color choice. These variables are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`--uxp-host-background-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-text-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-border-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-link-text-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-widget-hover-background-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-widget-hover-text-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-widget-hover-border-color`}</li>\n    </ul>\n    <p>{`And a few more: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`--uxp-host-text-color-secondary`}</li>\n      <li parentName=\"ul\">{`--uxp-host-link-hover-text-color`}</li>\n      <li parentName=\"ul\">{`--uxp-host-label-text-color`}</li>\n    </ul>\n    <p>{`Finally, there are three dealing with font size:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`--uxp-host-font-size`}</li>\n      <li parentName=\"ul\">{`--uxp-host-font-size-smaller`}</li>\n      <li parentName=\"ul\">{`--uxp-host-font-size-larger`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"how-to-use-css-variables\"\n    }}>{`How to Use CSS Variables`}</h2>\n    <p>{`In the CSS for your plugin panel, use the built-in CSS variables like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`body {\n    background-color: var(--uxp-host-background-color);\n    color: var(--uxp-host-text-color);\n    border-color: var(--uxp-host-border-color);\n    font-size: var(--uxp-host-font-size);\n}\n`}</code></pre>\n    <p>{`Of course, you don't have to style the entire body of your panel with these variables; you could style individual CSS classes instead.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.bigText {\n    color: var(--uxp-host-text-color);\n    font-size: var(--uxp-host-font-size-larger);\n}\n.smallText {\n    color: var(--uxp-host-text-color);\n    font-size: var(--uxp-host-font-size-smaller);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"how-do-they-look\"\n    }}>{`How Do They Look?`}</h2>\n    <p>{`If you create a simple HTML file that includes these CSS variables, here's how they'll look in Photoshop.`}</p>\n    <p>{`On the \"darkest\" theme, they look like this:`}</p>\n    <p><img alt=\"Darkest Theme\" src={require(\"./images/fonts-darkest.png\")} /></p>\n    <p>{`And on the \"lightest\" theme, they look like this:`}</p>\n    <p><img alt=\"Lightest Theme\" src={require(\"./images/fonts-lightest.png\")} /></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}