{"version":3,"file":"component---src-pages-scripting-how-it-works-index-md-d1bc7620976383114f71.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./src/pages/scripting/how-it-works/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-uxp-scripting-works\"\n    }}>{`How UXP Scripting Works`}</h1>\n    <p>{`Each Photoshop script file is a plain text file with a `}<inlineCode parentName=\"p\">{`.psjs`}</inlineCode>{` file extension. We plan on expanding UXP scripting to other applications and supporting opening scripts via double-click in the future. When this happens, the file extension will help identify which application the script should be launched in. `}</p>\n    <h2 {...{\n      \"id\": \"execution-context\"\n    }}>{`Execution Context`}</h2>\n    <p>{`Photoshop sets an execution context while invoking a script.`}</p>\n    <p>{`Within an execution context, only one script can be executed at a time. You cannot invoke another script from the running script. Using the UXP script module, you can access `}<inlineCode parentName=\"p\">{`ExecutionContext`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const script = await require(\"uxp\").script;\nconst executionContext = script.executionContext;\n`}</code></pre>\n    <p>{`It provides details about the current script execution, methods to send data to Photoshop, and events to manage script lifecycles. You can also use methods belonging to `}<inlineCode parentName=\"p\">{`executionControl.hostControl`}</inlineCode>{` to suspend/resume history states and auto close documents. Read more in the scripting `}<a parentName=\"p\" {...{\n        \"href\": \"../reference/\"\n      }}>{`reference`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`Script execution can be cancelled when: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`a user clicks on \"Cancel\" in the progress bar`}</li>\n      <li parentName=\"ul\">{`Photoshop encounters some exception in running a script file `}</li>\n    </ul>\n    <p>{`Script developers can add event handlers to get notified when the command has been cancelled. The callback will receive \"reason\" as a parameter. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`executionContext.onCancel.addListener((reason) => {\n    // reason would be a json object set by PS while cancelling\n    reject(\"Message\");\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"user-interface\"\n    }}>{`User Interface`}</h2>\n    <p>{`Scripts can only show a dialog UI. Any UI created by a script is modal in naturel By `}<em parentName=\"p\">{`not`}</em>{` using `}<inlineCode parentName=\"p\">{`await`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`showModal()`}</inlineCode>{` (not letting it return a Promise), execution can continue to completion at which point any UI is destroyed. If you don't see your modal UI appear, check that there is an `}<inlineCode parentName=\"p\">{`await`}</inlineCode>{` in front of it.`}</p>\n    <p>{`Photoshop automatically shows a `}<strong parentName=\"p\">{`progress bar`}</strong>{` if the script takes more than 2-3 seconds to finish.`}</p>\n    <h3 {...{\n      \"id\": \"global-await\"\n    }}>{`Global Await`}</h3>\n    <p><inlineCode parentName=\"p\">{`await`}</inlineCode>{` expressions cause `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` function execution to pause until a Promise is either fulfilled or rejected, and to resume execution\nof the `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` function after fulfillment. When resumed, the value of the `}<inlineCode parentName=\"p\">{`await`}</inlineCode>{` expression is that of the fulfilled Promise.`}</p>\n    <p>{`Global await means awaiting for a global scope async function to finish. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function anyAsyncFunction() {\n    return new Promise((resolve, reject) => {\n        const val = Math.random();\n        if (val > 0.5) {\n            console.log(\"Resolve promise\");\n            resolve(val);\n        } else {\n            console.error(\"Rejecting promise\");\n            reject(val);\n        }\n    })\n}\n\n// Global await\ntry {\n    const val = await anyAsyncFunction();\n    console.log(\"Value from function\", val);\n} catch {\n    console.log(\"Rejected promise!;\")\n}\nconsole.log(\"Script completed\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"permitted-uxp-modules\"\n    }}>{`Permitted UXP Modules`}</h2>\n    <p>{`With plugin development, developers define which UXP modules they want to access in the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file. Script permissions are managed by Photoshop internally and no manifest configuration is required. `}</p>\n    <p><strong parentName=\"p\">{`At this time, not all UXP modules are accessible by scripts but we plan on enabling more modules in future UXP versions.`}</strong>{`  All modules that are currently supported are enabled by default:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UXP Module`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Supported`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Current Access Level`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sample`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fonts`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Installed fonts can be read`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../samples/index.md#access-installed-fonts\"\n            }}>{`View sample.`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Clipboard`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Read/write access`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../samples/index.md#readwrite-to-clipboard\"\n            }}>{`View sample.`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LocalFileSystem`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File pickers can be used to open/save files. You can also call the `}<inlineCode parentName=\"td\">{`getTemporaryFolder API`}</inlineCode>{` to access a temporary data folder.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../samples/index.md#access-the-local-filesystem\"\n            }}>{`View sample.`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Network`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LaunchProcess`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`WebView`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IPC`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If you need to use the UXP modules that are not yet enabled for scripts, you should opt to create a UXP plugin instead. `}</p>\n    <h2 {...{\n      \"id\": \"faq\"\n    }}>{`FAQ`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`What are the required minimum versions for UDT (for debugging) and Photoshop?`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`UXP Scripting is available in Photoshop v23.5 and UDT v1.6.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Can you invoke a script from within another script? `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`No, inter-script communication is not possible. `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Can you pass arguments to scripts? `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For this first release, passing arguments is not supported but `}<strong parentName=\"li\">{`will be possible in a future release.`}</strong></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Can scripts be executed from plugins? `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`No; however, any UXP script code should be able to run from within a UXP plugin.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Can I enable permissions for a module?`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Developers cannot enable or seek the permission for a module. By default, all permitted modules are enabled by Photoshop.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Why only a limited number of modules are permitted in PS? Do we expect other modules to be enabled in the future?`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This is the first release of the UXP script module, and we’re working on enabling permissions to access more modules in upcoming releases.`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}