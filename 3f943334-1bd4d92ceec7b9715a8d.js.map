{"version":3,"file":"3f943334-1bd4d92ceec7b9715a8d.js","mappings":"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","sources":["webpack://uxp-photoshop-documentation/./node_modules/@adobe/gatsby-theme-aio/src/components/Tabs/index.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useState, useRef, createRef, forwardRef, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\n// import nextId from 'react-id-generator';\nimport '@spectrum-css/tabs';\n\nimport { cloneChildren, DESKTOP_SCREEN_WIDTH, MOBILE_SCREEN_WIDTH, TABLET_SCREEN_WIDTH, layoutColumns } from '../../utils';\n\nconst positionIndicator = (indicator, selectedTab) => {\n  indicator.current.style.transform = `translate(${selectedTab.current.offsetLeft}px, 0px)`;\n  indicator.current.style.width = `${selectedTab.current.offsetWidth}px`;\n};\n\nconst animateIndicator = (indicator, animate) => {\n  indicator.current.style.transition = animate ? '' : 'none';\n};\n\nconst setTabItemIcon = (child, className, iconSize) => {\n  if ( child?.props?.children?.props?.mdxType === 'img') {\n    return <IconImage image={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n  }\n  return <Icons icon={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n};\n\nconst mobileMinWidth = '480px';\nconst MAX_MOBILE_SCREEN_WIDTH = '767px';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n  return child;\n};\n\nconst IconImage = ({ image = '', styles=''}) => {\n  return (image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `,\n      })\n    : null);\n  }\n\nconst Icons = ({ icon, styles }) => {\n  return(\n    icon\n      ? cloneElement(icon, {\n        alt:'',\n        css: css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-600);\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n      : null\n  )\n}\n\nconst Tabs = forwardRef(({\n  orientation='horizontal',\n  density='regular',\n  isQuiet = true,\n  isHeader = false,\n  children,\n  className,\n  onFontsReady,\n  ...props },\n  ref) => {\n\n  useEffect(() => {\n    // Font affects positioning of the Tab indicator\n    document.fonts.ready.then(() => {\n      onFontsReady && onFontsReady();\n    });\n  }, [onFontsReady]);\n\n  return (\n\n    <div\n      ref={ref}\n      {...props}\n      role={!isHeader ? 'tablist' : undefined}\n      aria-orientation={!isHeader ? 'orientation' : undefined}\n      className={classNames(className, 'spectrum-Tabs', 'spectrum-Tabs--sizeM', `spectrum-Tabs--${orientation}`, { 'spectrum-Tabs--quiet' : isQuiet }, { 'spectrum-Tabs--compact': density === 'compact' })}\n    >\n      {children}\n    </div>\n  );\n});\n\nconst Item = forwardRef(({\n  elementType = 'div',\n    isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  // const id = nextId();\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      role='tab'\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabItemIcon = forwardRef(({\n  elementType = 'div',\n  icon,\n  isSelected,\n  isDisabled,\n  className,\n  children,\n  iconSize='xl',\n  ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Icon', { 'is-selected': isSelected }, { 'is-disabled ': isDisabled })}\n      css={css`\n        height: var(--spectrum-global-dimension-size-600);\n        width: var(--spectrum-global-dimension-size-550);\n        z-index: 1;\n      `}\n      >\n      {icon ? setTabItemIcon(icon, className, iconSize) : null}\n    </Element>\n  );\n});\n\nconst TabsIndicator = forwardRef(({ className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator')}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst CodeTabIndicator = forwardRef(({ className,index=0, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator',{\"default\":index ===0})}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst Label = ({ children }) => <span className='spectrum-Tabs-itemLabel'>{children}</span>;\n\nconst HeaderTabItem = forwardRef(({\n  elementType = 'div',\n  isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  hasDropdown=false,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      autofocus={true}\n      tabIndex=\"0\"\n      onKeyDown={(e)=>{\n          if(e.key===\"ArrowRight\"){\n          if(props.id===\"tabindex5\"){\n           document.getElementById(\"getCredentialID\").focus();\n          }\n          e.target.nextElementSibling && e.target.nextElementSibling.focus();\n        }\n        if(e.key===\"ArrowLeft\"){\n          if(props.id===\"tabindex0\"){\n              document.getElementById(\"product\")?.focus();\n            }else{\n              e.target.previousElementSibling && e.target.previousElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowDown\"){\n                    e.preventDefault();\n            if(hasDropdown){\n              props?.openDropDown && props?.openDropDown({index:props.index,isOpen:true,id:props.id});\n            }else{\n              e.target.nextElementSibling && e.target.nextElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowUp\"){\n\n            props?.openDropDown && props?.openDropDown({isOpen:false,id:props.id});\n            e.target.previousElementSibling && e.target.previousElementSibling.focus();\n          }\n      }}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabView = forwardRef(({ elementType = 'div', isHidden, className, children, ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      hidden={isHidden}\n      className={classNames(className)}>\n      {children}\n    </Element>\n  );\n});\n\nconst TabsBlock = ({\n  theme='light',\n  orientation='horizontal',\n  className,\n  APIReference = \"\",\n  ...props\n}) => {\n\n  const [tabs] = useState([]);\n  const selectedTabIndicator = useRef(null);\n   const [selectedIndex, setSelectedIndex] = useState({\n    tab: 0\n  });\n\n  const propKeys = Object.keys(props);\n  let filteredMenuProps = propKeys.filter((key) => key.startsWith('heading')).map(menu=>menu);\n\n  let menuItems = filteredMenuProps.map((_, index) => {\n    return {\n      heading: props?.[`heading${index}`]?.props?.children || props?.[`heading`],\n      content: props?.[`content${index}`] ||  props?.[`content`],\n      image: props?.[`image${index}`] || props?.[`image`]\n    };\n  });\n\n  const positionSelectedTabIndicator = (index = selectedIndex.tab) => {\n    const selectedTab = tabs.filter((tab) => tab?.current)[index];\n    positionIndicator(selectedTabIndicator, selectedTab);\n  };\n\n  const handleOnChange = (index) => {\n    setSelectedIndex({\n      tab: index,\n    });\n    positionSelectedTabIndicator(index);\n  };\n\n\n  return (\n    <section\n      className={classNames(className, `tabsBlock spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        max-width: 100%;\n        overflow-x:hidden !important;\n        margin: 0;\n        padding-bottom: var(--spectrum-global-dimension-size-250);\n      `}\n      >\n      <div\n        css={css`\n        display: ${orientation === 'vertical' ? 'inline-flex': ''};\n\n          @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n            margin: 0 auto !important\n          }\n\n          @media screen and (max-device-width: ${MOBILE_SCREEN_WIDTH}) {\n            flex-direction: column;\n            // width:100%;\n          }\n        `}\n      >\n        <div\n          css={css`\n            display: ${orientation === 'vertical' ? 'grid': 'block'};\n            position: relative;\n            grid-template-columns: 300px calc(100% - 300px);\n            margin-top: ${orientation === 'vertical' ? 'var(--spectrum-global-dimension-size-300)' : ''};\n            width: ${orientation === 'vertical' ? DESKTOP_SCREEN_WIDTH + ' !important' : 'inherit'};\n           \n           @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              // display: initial !important;\n              width: 100% !important;\n            }\n            \n            @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n              width:${layoutColumns(8)} !important;\n            }\n\n          `}>\n          <div css={css`${menuItems?.length > 6 ? 'overflow-x:auto; overflow-y: hidden;' : ''}`}>\n            {menuItems?.length > 0 ? (\n              <Tabs\n                orientation={orientation}\n                isQuiet={true}\n                onFontsReady={positionSelectedTabIndicator}\n              >\n\n                {menuItems.map((data, index) => {\n                  const ref = createRef();\n                  tabs.push(ref);\n                  const isSelected = selectedIndex.tab === index;\n                  return (\n                    <>\n                    <Item\n                      className={'tabItem'}\n                      key={`tabItem_${index}`}\n                      id={`tabItem_${index}`}\n                      ref={ref}\n                      isSelected={isSelected}\n                      aria-controls={`tabView${index}`}\n                      tabIndex={index=== selectedIndex.tab?0:-1}\n                      aria-label={data['heading']}\n                      aria-selected={index===selectedIndex.tab}\n                      label={<b>{data['heading']}</b>}\n                      icon={data['image']}\n                      onKeyDown={(e) => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter') {\n                          e.preventDefault();\n                        if(menuItems.length===index+1 && APIReference !== \"\"){\n                            document.getElementById(\"apiReference\")?.setAttribute(\"tabIndex\",0);\n                            document.getElementById(\"apiReference\").focus();\n                          }\n                          e.currentTarget.nextSibling && e.currentTarget.nextSibling.nextSibling.focus();\n                        }\n                        if (e.key === 'ArrowUp') {\n                          e.preventDefault();\n                          e.currentTarget.previousSibling && e.currentTarget.previousSibling.previousSibling.focus();\n                        }\n                      }}\n                      onFocus={() => {\n                        handleOnChange(index);\n                      }}\n                      onClick={() => {\n                        handleOnChange(index);\n                      }}\n\n                      css={css`\n                        text-align: left;\n                        white-space: normal;\n                        width: ${orientation === 'vertical'\n                        ? 'calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-600))'\n                        : 'calc(var(--spectrum-global-dimension-static-grid-fixed-max-width) / var(--spectrum-global-dimension-static-grid-columns))'} !important;\n                        font-size: var(--spectrum-global-dimension-size-200);\n                        margin-bottom: ${orientation === 'vertical' ? '1rem !important' : '0rem'};\n                        display: flex !important;\n                        padding: var(--spectrum-global-dimension-size-125) !important;\n                        height: auto !important;\n                        line-height: ${orientation === 'vertical' ? 'initial !important' : 'initial'};\n                        .spectrum-Tabs-itemLabel{\n                          margin-top:5px;\n                          margin-bottom:5px;\n                        }\n                        .spectrum-Icon{\n                          background-size: var(--spectrum-global-dimension-size-225) var(--spectrum-global-dimension-size-275);\n                          width: var(--spectrum-global-dimension-size-500);\n                          height: var(--spectrum-global-dimension-size-400);\n                        }\n\n                        &.is-disabled {\n                          pointer-events:none;\n                        }\n                        &::before {\n                          left: var(--spectrum-global-dimension-size-0) !important;\n                          right: var(--spectrum-global-dimension-size-0) !important;\n                          border:none !important;\n                        }\n\n                        @media only screen and (max-width: ${mobileMinWidth}) {\n                          margin-top:var(--spectrum-global-dimension-size-25) !important;\n                          margin-bottom:var(--spectrum-global-dimension-size-25) !important;\n                        }\n\n                        @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                          padding-left: var(--spectrum-global-dimension-size-0) !important;\n                        }\n                        @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                          left: var(--spectrum-global-dimension-size-250) !important;\n                        }\n                      `}\n                    >\n                      <div\n                        key={`mobileTabView_${index}`}\n                        className=\"mobileTabView\"\n                        hidden={!isSelected}\n                        css={css`\n                          display: none;\n                          padding: var(--spectrum-global-dimension-size-0) !important;\n                          h3 {\n                            font-size:var(--spectrum-heading-s-text-size, var(--spectrum-alias-heading-s-text-size));\n                          }\n                          p {\n                            font-size: var(--spectrum-body-s-text-size, var(--spectrum-global-dimension-font-size-150))\n                          }\n                          @media only screen and (max-width: ${MAX_MOBILE_SCREEN_WIDTH}) {\n                            display: block;\n                          }\n                        `}\n                      >\n                        {data['content'] ? data['content'] : null}\n                      </div>\n                  </Item>\n                    </>\n                  )\n                })}\n                <TabsIndicator ref={selectedTabIndicator} />\n                {APIReference !== \"\" && (\n                <div\n                  css={css`\n                    text-align: left;\n                    white-space: normal;\n                    width: calc(var(--spectrum-global-dimension-size-2500) + var(--spectrum-global-dimension-size-750)) !important;\n                    font-size: var(--spectrum-global-dimension-size-200);\n                    padding: var(--spectrum-global-dimension-size-125) !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      left: var(--spectrum-global-dimension-size-100) !important;\n                      margin-top: var(--spectrum-global-dimension-size-125) !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-125) !important;\n                    }\n\n                    @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                      left: var(--spectrum-global-dimension-size-250) !important;\n                    }\n                  `}\n                >\n                  <span\n                    css={css`\n                      text-align: left;\n                      cursor: pointer;\n                      margin-top: var(--spectrum-global-dimension-size-85);\n                      margin-left: var(--spectrum-global-dimension-size-400);\n\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n\n                      @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n                    `}\n                  >\n                    <a\n                      href={APIReference}\n                      tabIndex={-1}\n                      id=\"apiReference\"\n                      css={css`\n                        color: #4b9cf5;\n                         &:focus {\n                           text-decoration:underline;\n                           border-bottom: 1px solid #1374e6;\n                         }\n                      `}\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                      onKeyDown={(e) => {\n                        if(e.key===\"ArrowUp\"){\n                          e.preventDefault();\n                          handleOnChange(menuItems?.length-1);\n                          document.getElementById(`tabItem_${menuItems?.length-1}`).focus()\n                        }\n                      }}\n                      onBlur={()=>{\n                        document.getElementById(\"apiReference\").setAttribute(\"tabIndex\",-1);\n                      }}\n                    >\n                      API Reference\n                    </a>\n                  </span>\n                </div>\n              )}\n              </Tabs>\n            ) : null}\n          </div>\n          {menuItems?.length > 0 ?\n            menuItems.map((data, index) => {\n              const isHidden = selectedIndex.tab === index;\n              const contentData = data['content'];\n              contentData.props = {...contentData.props,index:selectedIndex.tab}\n              return(\n                <TabView\n                  key={`tabView_${index}`}\n                  id={`tabView${index}`}\n                  className={'tabView'}\n                  isHidden={!isHidden}\n                  css={css`\n                    text-align: left;\n                    padding: 0px 0 var(--spectrum-global-dimension-size-100) 10px !important;\n                    overflow-x: hidden !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      padding-left: inherit !important;\n                      max-width: ${layoutColumns(3)} !important;\n                    }\n\n                    @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(3.5)} !important;\n                    }\n\n                    @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(6.5)} !important;\n                      padding-left:var(--spectrum-global-dimension-size-500);\n                    }\n\n                  `}\n                >\n                  { contentData }\n                </TabView>\n              )\n            })\n          : null}\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nTabs.propTypes = {\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  density: PropTypes.oneOf(['regular', 'compact']),\n  isQuiet: PropTypes.boolean,\n  className: PropTypes.string,\n};\n\nItem.propTypes = {\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.object\n};\n\nTabItemIcon.propTypes = {\n  elementType: PropTypes.string,\n  icon: PropTypes.element,\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  iconSize: PropTypes.string,\n  className: PropTypes.string\n};\n\nTabView.propTypes = {\n  isHidden: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nTabsBlock.propTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'lightest']),\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  image: PropTypes.string,\n  className: PropTypes.string,\n  APIReference: PropTypes.string,\n};\n\n\nexport { Tabs, Item, TabView, TabItemIcon, Label, TabsIndicator, positionIndicator, animateIndicator,CodeTabIndicator, TabsBlock,HeaderTabItem };\n"],"names":["positionIndicator","indicator","selectedTab","current","style","transform","offsetLeft","width","offsetWidth","animateIndicator","animate","transition","mobileMinWidth","setImageLoading","child","_child$props2","props","mdxType","cloneElement","loading","IconImage","_ref6","image","styles","children","cloneChildren","css","Icons","_ref7","icon","alt","Tabs","forwardRef","_ref8","ref","orientation","density","isQuiet","isHeader","className","onFontsReady","_objectWithoutProperties","_excluded","useEffect","document","fonts","ready","then","___EmotionJSX","_extends","role","undefined","classNames","Item","_ref9","_label$props","elementType","isDisabled","isSelected","label","_excluded2","Element","title","disabled","TabItemIcon","Label","_ref5","name","_ref10","iconSize","_excluded3","setTabItemIcon","_child$props","_child$props$children","_child$props$children2","_ref4","TabsIndicator","_ref11","_excluded4","_ref3","CodeTabIndicator","_ref12","index","_excluded5","_ref13","HeaderTabItem","_ref14","_label$props2","hasDropdown","_excluded6","autofocus","tabIndex","onKeyDown","e","_document$getElementB","key","id","getElementById","focus","target","nextElementSibling","previousElementSibling","preventDefault","openDropDown","isOpen","TabView","_ref15","isHidden","_excluded7","hidden","_ref","_ref2","TabsBlock","_ref16","theme","APIReference","_excluded8","tabs","useState","selectedTabIndicator","useRef","selectedIndex","setSelectedIndex","tab","menuItems","Object","keys","filter","startsWith","map","menu","_","_props","_props$props","heading","content","positionSelectedTabIndicator","handleOnChange","TABLET_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","layoutColumns","length","data","createRef","push","React","_document$getElementB2","setAttribute","currentTarget","nextSibling","previousSibling","onFocus","onClick","href","rel","onBlur","contentData","_objectSpread"],"sourceRoot":""}