{"version":3,"sources":["webpack:///./node_modules/@adobe/gatsby-theme-aio/src/components/Hero/index.js"],"names":["HeroButtons","buttons","variants","quiets","props","gap","wrap","React","Children","map","children","item","i","variant","quiet","link","getElementChild","key","isQuiet","href","HeroImage","image","styles","cloneElement","css","HeroTexts","texts","Object","keys","filter","startsWith","textKey","className","HeroHeading","heading","Hero","background","theme","icon","width","LARGE_SCREEN_WIDTH","height","marginTop","justifyContent","isVariant"],"mappings":"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","file":"5e65052d-9792f496b5cfd4fd9bd8.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { css } from '@emotion/core';\nimport { Flex } from '@adobe/react-spectrum';\nimport { AnchorButton } from '../AnchorButton';\nimport '@spectrum-css/typography';\nimport PropTypes from 'prop-types';\nimport { getElementChild, LARGE_SCREEN_WIDTH } from '../../utils';\n\nconst HeroButtons = ({ buttons, variants = ['cta', 'primary'], quiets = [true, true], ...props }) =>\n  buttons ? (\n    <Flex gap=\"size-200\" wrap=\"wrap\" {...props}>\n      {React.Children.map(buttons.props.children, (item, i) => {\n        let variant = variants[0];\n        let quiet = quiets[0];\n\n        if (i > 0) {\n          variant = variants[1];\n          quiet = quiets[1];\n        }\n\n        const link = getElementChild(item);\n\n        return (\n          <AnchorButton key={i} isQuiet={quiet} href={link.props.href} variant={variant}>\n            {link.props.children}\n          </AnchorButton>\n        );\n      })}\n    </Flex>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? React.cloneElement(image, {\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          margin-top: 0;\n          ${styles}\n\n          & > img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            border-radius: 0;\n          }\n        `\n      })\n    : null;\n\nconst HeroTexts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    React.cloneElement(texts[textKey], {\n      className: 'spectrum-Body--L',\n      css: css`\n        &.spectrum-Body--L {\n          margin-top: 0 !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant }) =>\n  heading\n    ? React.cloneElement(heading, {\n        className: variant === 'default' ? 'spectrum-Heading--XL' : 'spectrum-Heading--XXL spectrum-Heading--serif',\n        css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n      })\n    : null;\n\nconst Hero = ({\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  variant = 'default',\n  width = 'var(--spectrum-global-dimension-static-grid-fixed-max-width)',\n  ...props\n}) => {\n  if (!variant || variant === 'default') {\n    return (\n      <section\n        className={`spectrum--${theme}`}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n            overflow: auto;\n            height: 100vh;\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-250))';\n\n    if (variant === 'fullwidth') {\n      return (\n        <section\n          className={`spectrum--${theme}`}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n              overflow: auto;\n              padding: var(--spectrum-global-dimension-size-800) 0;\n              height: 100vh;\n            }\n          `}>\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons buttons={buttons} variants={['cta', 'overBackground']} marginTop=\"size-400\" />\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={`spectrum--lightest`}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n            }\n          `}>\n          <Flex justifyContent=\"center\" height=\"100%\">\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                React.cloneElement(icon, {\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    img {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons buttons={buttons} marginTop=\"size-300\" />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${LARGE_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </Flex>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  quiets: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"sourceRoot":""}