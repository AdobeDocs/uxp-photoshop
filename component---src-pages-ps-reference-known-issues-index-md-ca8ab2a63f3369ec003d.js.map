{"version":3,"file":"component---src-pages-ps-reference-known-issues-index-md-ca8ab2a63f3369ec003d.js","mappings":"6SAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,gCAA8B,iCAEtCA,EAAAA,EAAAA,KAAA,MACE,GAAM,4BAA0B,iCAElCA,EAAAA,EAAAA,KAAA,MACE,GAAM,gCAA8B,iCAEtCA,EAAAA,EAAAA,KAAA,mEAA6DA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,mFAAmFH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,mHACrPH,EAAAA,EAAAA,KAAA,8CAAwCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,gJAGjG,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://uxp-photoshop-documentation/./src/pages/ps_reference/known-issues/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-photoshop/uxp-photoshop/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"known-issues-and-workarounds\"\n    }}>{`Known Issues and Workarounds`}</h1>\n    <h2 {...{\n      \"id\": \"photoshop-2341-july-2022\"\n    }}>{`Photoshop 23.4.1 (July 2022)`}</h2>\n    <h3 {...{\n      \"id\": \"increased-batchplay-throwing\"\n    }}>{`Increased batchPlay throwing`}</h3>\n    <p>{`A change was introduced in Photoshop which will cause `}<inlineCode parentName=\"p\">{`batchPlay`}</inlineCode>{` calls to throw more often on a bad request. In this update in particular, the `}<inlineCode parentName=\"p\">{`move`}</inlineCode>{` command on layers may be more sensitive to the state of your Document, and throw where it previously had not.`}</p>\n    <p>{`We suggest that if you are using `}<inlineCode parentName=\"p\">{`batchPlay`}</inlineCode>{` to enhance your plugin, that you guard against such possibilities with an appropriate try-catch block, or use the DOM APIs when applicable.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}